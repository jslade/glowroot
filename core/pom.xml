<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.glowroot</groupId>
    <artifactId>glowroot-parent</artifactId>
    <version>0.8.5-SNAPSHOT</version>
  </parent>

  <artifactId>glowroot-core</artifactId>

  <name>Glowroot Core</name>
  <description>Glowroot Core</description>

  <properties>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss Z</maven.build.timestamp.format>
    <sonar.sources>src/main/java,app</sonar.sources>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-plugin-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-collector-spi</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <!-- immutables is only needed at compile time -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>builder</artifactId>
      <version>2.0.21</version>
      <!-- immutables is only needed at compile time -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>5.0.4</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-commons</artifactId>
      <version>5.0.4</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-tree</artifactId>
      <version>5.0.4</version>
    </dependency>
    <dependency>
      <!-- org.objectweb.asm.util.CheckClassAdapter.verify() is used when woven byte code
        verification is enabled via -Dglowroot.weaving.verify=true -->
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-util</artifactId>
      <version>5.0.4</version>
    </dependency>
    <dependency>
      <!-- this is an optional dependency of asm-util -->
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-analysis</artifactId>
      <version>5.0.4</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
    </dependency>
    <dependency>
      <!-- optional netty dependency that is required by HttpContentCompressor -->
      <groupId>com.jcraft</groupId>
      <artifactId>jzlib</artifactId>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-guava</artifactId>
      <version>2.6.1</version>
    </dependency>
    <dependency>
      <groupId>org.hdrhistogram</groupId>
      <artifactId>HdrHistogram</artifactId>
      <version>2.1.6</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.3.176</version>
    </dependency>
    <dependency>
      <groupId>com.ning</groupId>
      <artifactId>compress-lzf</artifactId>
      <version>1.0.3</version>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>mailapi</artifactId>
      <version>1.5.4</version>
      <exclusions>
        <exclusion>
          <!-- JAF included in Java SE 6+ -->
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>smtp</artifactId>
      <version>1.5.4</version>
      <exclusions>
        <exclusion>
          <!-- JAF included in Java SE 6+ -->
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <!-- needed for compiling org.glowroot.testing.SpyingLogbackFilter and needed during shading,
        but optional as a transitive dependency of unshaded core -->
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>${checker.qual.group.id}</groupId>
      <artifactId>${checker.qual.artifact.id}</artifactId>
      <version>${checker.qual.version}</version>
      <!-- don't need this dependency at runtime since only annotations -->
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <!-- don't need this dependency at runtime since only annotations -->
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is included to test weaving against jdk 1.3 bytecode -->
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <!-- this is the latest version compiled to jdk 1.3 bytecode -->
      <version>2.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is included to test weaving against JSR bytecode that ends up being inlined via
        JSRInlinerAdapter -->
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-core</artifactId>
      <!-- this is the latest version compiled to jdk 5 and therefore the latest version to include
        JSR bytecode since JSR bytecode was deprecated in jdk 6 -->
      <version>2.5.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- dependency of jackrabbit-core that is marked "provided" so not transitively inherited -->
      <groupId>javax.jcr</groupId>
      <artifactId>jcr</artifactId>
      <version>2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is included to test weaving against jdk 1.7 bytecode -->
      <groupId>io.undertow</groupId>
      <artifactId>undertow-core</artifactId>
      <version>1.2.10.Final</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${project.build.directory}/ui-resources-dist</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>0.0.24</version>
        <executions>
          <execution>
            <id>install-node-and-npm</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <nodeVersion>v0.12.2</nodeVersion>
              <npmVersion>2.7.6</npmVersion>
            </configuration>
          </execution>
          <execution>
            <!-- could delete node_modules using maven-clean-plugin, but that adds unnecessary
              overhead to simple mvn clean install -->
            <id>npm-prune</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <arguments>prune</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm-install</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <!-- could delete app/bower_components using maven-clean-plugin, but that adds
              unnecessary overhead to simple mvn clean install -->
            <id>bower-prune</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>bower</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <arguments>prune</arguments>
            </configuration>
          </execution>
          <execution>
            <id>bower-install</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>bower</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>grunt-build</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>grunt</goal>
            </goals>
            <configuration>
              <skip>${glowroot.ui.skip}</skip>
              <arguments>--no-color jshint build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <dependencyReducedPomLocation>
            ${project.build.directory}/dependency-reduced-pom.xml
          </dependencyReducedPomLocation>
          <createSourcesJar>true</createSourcesJar>
          <shadeSourcesContent>true</shadeSourcesContent>
          <artifactSet>
            <excludes>
              <!-- don't need these dependencies at runtime since only annotations -->
              <exclude>${checker.qual.group.id}:${checker.qual.artifact.id}</exclude>
              <exclude>com.google.code.findbugs:jsr305</exclude>
            </excludes>
          </artifactSet>
          <filters>
            <filter>
              <artifact>com.google.guava:guava</artifact>
              <excludes>
                <exclude>META-INF/beans.xml</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.google.protobuf:protobuf-java</artifact>
              <excludes>
                <exclude>google/protobuf/*.proto</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.h2database:h2</artifact>
              <excludes>
                <exclude>META-INF/services/java.sql.Driver</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>io.netty:netty-all</artifact>
              <excludes>
                <exclude>META-INF/io.netty.versions.properties</exclude>
                <exclude>META-INF/native/**</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.fasterxml.jackson.core:jackson-core</artifact>
              <excludes>
                <exclude>META-INF/services/com.fasterxml.jackson.core.JsonFactory</exclude>
                <exclude>META-INF/LICENSE</exclude>
                <exclude>META-INF/NOTICE</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.fasterxml.jackson.core:jackson-databind</artifact>
              <excludes>
                <exclude>META-INF/services/com.fasterxml.jackson.core.ObjectCodec</exclude>
                <exclude>META-INF/LICENSE</exclude>
                <exclude>META-INF/NOTICE</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.fasterxml.jackson.core:jackson-annotations</artifact>
              <excludes>
                <exclude>META-INF/LICENSE</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.fasterxml.jackson.datatype:jackson-datatype-guava</artifact>
              <excludes>
                <exclude>META-INF/services/com.fasterxml.jackson.databind.Module</exclude>
                <exclude>META-INF/LICENSE</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.sun.mail:mailapi</artifact>
              <excludes>
                <exclude>META-INF/gfprobe-provider.xml</exclude>
                <exclude>META-INF/javamail.charset.map</exclude>
                <exclude>META-INF/mailcap</exclude>
                <exclude>META-INF/LICENSE.txt</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.sun.mail:smtp</artifact>
              <excludes>
                <!-- javamail.address.map and javamail.providers are replaced with
                  glowroot.javamail.address.map and glowroot.javamail.providers -->
                <exclude>META-INF/javamail.address.map</exclude>
                <exclude>META-INF/javamail.providers</exclude>
                <exclude>META-INF/LICENSE.txt</exclude>
              </excludes>
            </filter>
          </filters>
          <relocations>
            <relocation>
              <pattern>org.objectweb.asm</pattern>
              <shadedPattern>org.glowroot.shaded.objectweb.asm</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.h2</pattern>
              <shadedPattern>org.glowroot.shaded.h2</shadedPattern>
              <excludes>
                <!-- these resource files are actually read from org/h2/util/data.zip whose
                  internals do not get shaded -->
                <exclude>/org/h2/res/*</exclude>
                <exclude>/org/h2/server/web/res/*</exclude>
              </excludes>
            </relocation>
            <relocation>
              <!-- shade thread names to make it easy to identify glowroot threads -->
              <rawString>true</rawString>
              <pattern>H2 File Lock Watchdog</pattern>
              <shadedPattern>Glowroot-H2 File Lock Watchdog</shadedPattern>
            </relocation>
            <relocation>
              <!-- shade thread names to make it easy to identify glowroot threads -->
              <rawString>true</rawString>
              <pattern>H2 Log Writer</pattern>
              <shadedPattern>Glowroot-H2 Log Writer</shadedPattern>
            </relocation>
            <relocation>
              <!-- shade thread names to make it easy to identify glowroot threads -->
              <rawString>true</rawString>
              <pattern>Generate Seed</pattern>
              <shadedPattern>Glowroot-H2 Generate Seed</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.ning.compress</pattern>
              <shadedPattern>org.glowroot.shaded.ning.compress</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.google.common</pattern>
              <shadedPattern>org.glowroot.shaded.google.common</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.google.protobuf</pattern>
              <shadedPattern>org.glowroot.shaded.google.protobuf</shadedPattern>
            </relocation>
            <relocation>
              <!-- a couple of classes in guava are under this package name -->
              <pattern>com.google.thirdparty</pattern>
              <shadedPattern>org.glowroot.shaded.google.thirdparty</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.HdrHistogram</pattern>
              <shadedPattern>org.glowroot.shaded.HdrHistogram</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.fasterxml.jackson</pattern>
              <shadedPattern>org.glowroot.shaded.fasterxml.jackson</shadedPattern>
            </relocation>
            <relocation>
              <pattern>io.netty</pattern>
              <shadedPattern>org.glowroot.shaded.netty</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.jcraft.jzlib</pattern>
              <shadedPattern>org.glowroot.shaded.jcraft.jzlib</shadedPattern>
            </relocation>
            <relocation>
              <pattern>javax.mail</pattern>
              <shadedPattern>org.glowroot.shaded.javax.mail</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.sun.mail</pattern>
              <shadedPattern>org.glowroot.shaded.sun.mail</shadedPattern>
            </relocation>
            <relocation>
              <rawString>true</rawString>
              <pattern>^META-INF/javamail.address.map$</pattern>
              <shadedPattern>META-INF/glowroot.javamail.address.map</shadedPattern>
            </relocation>
            <relocation>
              <rawString>true</rawString>
              <pattern>^META-INF/javamail.providers$</pattern>
              <shadedPattern>META-INF/glowroot.javamail.providers</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.slf4j</pattern>
              <shadedPattern>org.glowroot.shaded.slf4j</shadedPattern>
            </relocation>
            <relocation>
              <!-- this shades guava's use of java util logging which is needed to prevent java
                util logging from being initialized early (e.g. in the case of wildfly which
                wants to do some setup before jul is initialized) -->
              <pattern>java.util.logging</pattern>
              <shadedPattern>org.glowroot.shaded.jul</shadedPattern>
              <excludes>
                <!-- don't shade the system property key "java.util.logging.manager"
                  (unshaded string is needed in LazyPlatformMBeanServer) -->
                <exclude>java.util.logging.manager</exclude>
              </excludes>
            </relocation>
            <relocation>
              <pattern>ch.qos.logback.core</pattern>
              <shadedPattern>org.glowroot.shaded.qos.logback.core</shadedPattern>
            </relocation>
            <relocation>
              <pattern>ch.qos.logback.classic</pattern>
              <shadedPattern>org.glowroot.shaded.qos.logback.classic</shadedPattern>
            </relocation>
            <relocation>
              <!-- ch.qos.logback.classic.util.ContextInitializer : "logback.configurationFile" -->
              <rawString>true</rawString>
              <pattern>^logback.configurationFile$</pattern>
              <shadedPattern>glowroot.logback.configurationFile</shadedPattern>
            </relocation>
            <relocation>
              <!-- ch.qos.logback.classic.util.ContextInitializer : "logback.groovy" -->
              <rawString>true</rawString>
              <pattern>^logback.groovy$</pattern>
              <shadedPattern>glowroot.logback.groovy</shadedPattern>
            </relocation>
            <relocation>
              <!-- ch.qos.logback.classic.util.ContextInitializer : "logback.xml"
                ch.qos.logback.classic.util.ContextInitializer : "logback-test.xml" -->
              <rawString>true</rawString>
              <pattern>^logback(-test)?.xml$</pattern>
              <shadedPattern>glowroot.logback$1.xml</shadedPattern>
            </relocation>
            <relocation>
              <!-- ch.qos.logback.classic.ClassicConstants : "logback.ContextSelector" -->
              <rawString>true</rawString>
              <pattern>^logback.ContextSelector$</pattern>
              <shadedPattern>glowroot.logback.ContextSelector</shadedPattern>
            </relocation>
            <relocation>
              <!-- ch.qos.logback.classic.ClassicConstants : "java:comp/env/logback/configuration-resource" -->
              <rawString>true</rawString>
              <pattern>^java:comp/env/logback/configuration-resource$</pattern>
              <shadedPattern>
                java:comp/env/glowroot.logback/configuration-resource
              </shadedPattern>
            </relocation>
            <relocation>
              <!-- ch.qos.logback.classic.ClassicConstants : "java:comp/env/logback/context-name" -->
              <rawString>true</rawString>
              <pattern>^java:comp/env/logback/context-name$</pattern>
              <shadedPattern>java:comp/env/glowroot.logback/context-name</shadedPattern>
            </relocation>
          </relocations>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- maven-failsafe-plugin is used to execute JarFileShadingIT since it needs to run after
          the packaging phase so that glowroot.jar will be available -->
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <manifestEntries>
                <Build-Time>${maven.build.timestamp}</Build-Time>
                <Main-Class>org.glowroot.Viewer</Main-Class>
                <Premain-Class>org.glowroot.Agent</Premain-Class>
                <Can-Redefine-Classes>true</Can-Redefine-Classes>
                <Can-Retransform-Classes>true</Can-Retransform-Classes>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <!-- TODO this is needed until https://jira.codehaus.org/browse/MSHADE-182 -->
                  <pluginExecutionFilter>
                    <groupId>com.coderplus.maven.plugins</groupId>
                    <artifactId>copy-rename-maven-plugin</artifactId>
                    <versionRange>[0.0,)</versionRange>
                    <goals>
                      <goal>rename</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <!-- frontend-maven-plugin has nice m2e support, but the grunt build is slow and I
                    don't use eclipse for ui work anyways -->
                  <pluginExecutionFilter>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <versionRange>[0.0,)</versionRange>
                    <goals>
                      <goal>install-node-and-npm</goal>
                      <goal>npm</goal>
                      <goal>bower</goal>
                      <goal>grunt</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
