// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Trace.proto

package org.glowroot.collector.spi.model;

public final class TraceOuterClass {
  private TraceOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TraceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
     */
    org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header getHeader();
    /**
     * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
     */
    org.glowroot.collector.spi.model.TraceOuterClass.Trace.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
     *
     * <pre>
     * each entry can have child entries (and each child entry can have child entries, etc)
     * </pre>
     */
    java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> 
        getEntryList();
    /**
     * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
     *
     * <pre>
     * each entry can have child entries (and each child entry can have child entries, etc)
     * </pre>
     */
    org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry getEntry(int index);
    /**
     * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
     *
     * <pre>
     * each entry can have child entries (and each child entry can have child entries, etc)
     * </pre>
     */
    int getEntryCount();
    /**
     * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
     *
     * <pre>
     * each entry can have child entries (and each child entry can have child entries, etc)
     * </pre>
     */
    java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder> 
        getEntryOrBuilderList();
    /**
     * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
     *
     * <pre>
     * each entry can have child entries (and each child entry can have child entries, etc)
     * </pre>
     */
    org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder getEntryOrBuilder(
        int index);

    /**
     * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
     */
    boolean hasProfileTree();
    /**
     * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
     */
    org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree getProfileTree();
    /**
     * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
     */
    org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTreeOrBuilder getProfileTreeOrBuilder();
  }
  /**
   * Protobuf type {@code org_glowroot_collector_spi.Trace}
   */
  public  static final class Trace extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace)
      TraceOrBuilder {
    // Use Trace.newBuilder() to construct.
    private Trace(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Trace() {
      entry_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Trace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                entry_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry>();
                mutable_bitField0_ |= 0x00000002;
              }
              entry_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.parser(), extensionRegistry));
              break;
            }
            case 26: {
              org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.Builder subBuilder = null;
              if (profileTree_ != null) {
                subBuilder = profileTree_.toBuilder();
              }
              profileTree_ = input.readMessage(org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(profileTree_);
                profileTree_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          entry_ = java.util.Collections.unmodifiableList(entry_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Builder.class);
    }

    public interface HeaderOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace.Header)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string id = 1;</code>
       */
      java.lang.String getId();
      /**
       * <code>optional string id = 1;</code>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <code>optional bool partial = 2;</code>
       */
      boolean getPartial();

      /**
       * <code>optional bool slow = 3;</code>
       */
      boolean getSlow();

      /**
       * <code>optional int64 start_time = 4;</code>
       */
      long getStartTime();

      /**
       * <code>optional int64 capture_time = 5;</code>
       */
      long getCaptureTime();

      /**
       * <code>optional int64 duration_nanos = 6;</code>
       */
      long getDurationNanos();

      /**
       * <code>optional string transaction_type = 7;</code>
       */
      java.lang.String getTransactionType();
      /**
       * <code>optional string transaction_type = 7;</code>
       */
      com.google.protobuf.ByteString
          getTransactionTypeBytes();

      /**
       * <code>optional string transaction_name = 8;</code>
       */
      java.lang.String getTransactionName();
      /**
       * <code>optional string transaction_name = 8;</code>
       */
      com.google.protobuf.ByteString
          getTransactionNameBytes();

      /**
       * <code>optional string headline = 9;</code>
       */
      java.lang.String getHeadline();
      /**
       * <code>optional string headline = 9;</code>
       */
      com.google.protobuf.ByteString
          getHeadlineBytes();

      /**
       * <code>optional string user = 10;</code>
       */
      java.lang.String getUser();
      /**
       * <code>optional string user = 10;</code>
       */
      com.google.protobuf.ByteString
          getUserBytes();

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
       */
      java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute> 
          getAttributeList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute getAttribute(int index);
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
       */
      int getAttributeCount();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
       */
      java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.AttributeOrBuilder> 
          getAttributeOrBuilderList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.AttributeOrBuilder getAttributeOrBuilder(
          int index);

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
       */
      java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> 
          getDetailEntryList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getDetailEntry(int index);
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
       */
      int getDetailEntryCount();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
       */
      java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
          getDetailEntryOrBuilderList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder getDetailEntryOrBuilder(
          int index);

      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
       */
      boolean hasError();
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error getError();
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder getErrorOrBuilder();

      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
       */
      boolean hasRootTimer();
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer getRootTimer();
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder getRootTimerOrBuilder();

      /**
       * <code>optional sint64 thread_cpu_nanos = 15;</code>
       *
       * <pre>
       * -1 means N/A
       * </pre>
       */
      long getThreadCpuNanos();

      /**
       * <code>optional sint64 thread_blocked_nanos = 16;</code>
       *
       * <pre>
       * -1 means N/A
       * </pre>
       */
      long getThreadBlockedNanos();

      /**
       * <code>optional sint64 thread_waited_nanos = 17;</code>
       *
       * <pre>
       * -1 means N/A
       * </pre>
       */
      long getThreadWaitedNanos();

      /**
       * <code>optional sint64 thread_allocated_bytes = 18;</code>
       *
       * <pre>
       * -1 means N/A
       * </pre>
       */
      long getThreadAllocatedBytes();

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
       */
      java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity> 
          getGcActivityList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity getGcActivity(int index);
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
       */
      int getGcActivityCount();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
       */
      java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivityOrBuilder> 
          getGcActivityOrBuilderList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivityOrBuilder getGcActivityOrBuilder(
          int index);

      /**
       * <code>optional int32 entry_count = 20;</code>
       */
      int getEntryCount();

      /**
       * <code>optional bool entry_limit_exceeded = 21;</code>
       */
      boolean getEntryLimitExceeded();

      /**
       * <code>optional int64 profile_sample_count = 22;</code>
       */
      long getProfileSampleCount();

      /**
       * <code>optional bool profile_sample_limit_exceeded = 23;</code>
       */
      boolean getProfileSampleLimitExceeded();
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace.Header}
     */
    public  static final class Header extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace.Header)
        HeaderOrBuilder {
      // Use Header.newBuilder() to construct.
      private Header(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Header() {
        id_ = "";
        partial_ = false;
        slow_ = false;
        startTime_ = 0L;
        captureTime_ = 0L;
        durationNanos_ = 0L;
        transactionType_ = "";
        transactionName_ = "";
        headline_ = "";
        user_ = "";
        attribute_ = java.util.Collections.emptyList();
        detailEntry_ = java.util.Collections.emptyList();
        threadCpuNanos_ = 0L;
        threadBlockedNanos_ = 0L;
        threadWaitedNanos_ = 0L;
        threadAllocatedBytes_ = 0L;
        gcActivity_ = java.util.Collections.emptyList();
        entryCount_ = 0;
        entryLimitExceeded_ = false;
        profileSampleCount_ = 0L;
        profileSampleLimitExceeded_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Header(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                id_ = s;
                break;
              }
              case 16: {

                partial_ = input.readBool();
                break;
              }
              case 24: {

                slow_ = input.readBool();
                break;
              }
              case 32: {

                startTime_ = input.readInt64();
                break;
              }
              case 40: {

                captureTime_ = input.readInt64();
                break;
              }
              case 48: {

                durationNanos_ = input.readInt64();
                break;
              }
              case 58: {
                String s = input.readStringRequireUtf8();

                transactionType_ = s;
                break;
              }
              case 66: {
                String s = input.readStringRequireUtf8();

                transactionName_ = s;
                break;
              }
              case 74: {
                String s = input.readStringRequireUtf8();

                headline_ = s;
                break;
              }
              case 82: {
                String s = input.readStringRequireUtf8();

                user_ = s;
                break;
              }
              case 90: {
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                  attribute_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute>();
                  mutable_bitField0_ |= 0x00000400;
                }
                attribute_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.parser(), extensionRegistry));
                break;
              }
              case 98: {
                if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                  detailEntry_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry>();
                  mutable_bitField0_ |= 0x00000800;
                }
                detailEntry_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.parser(), extensionRegistry));
                break;
              }
              case 106: {
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder subBuilder = null;
                if (error_ != null) {
                  subBuilder = error_.toBuilder();
                }
                error_ = input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(error_);
                  error_ = subBuilder.buildPartial();
                }

                break;
              }
              case 114: {
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder subBuilder = null;
                if (rootTimer_ != null) {
                  subBuilder = rootTimer_.toBuilder();
                }
                rootTimer_ = input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(rootTimer_);
                  rootTimer_ = subBuilder.buildPartial();
                }

                break;
              }
              case 120: {

                threadCpuNanos_ = input.readSInt64();
                break;
              }
              case 128: {

                threadBlockedNanos_ = input.readSInt64();
                break;
              }
              case 136: {

                threadWaitedNanos_ = input.readSInt64();
                break;
              }
              case 144: {

                threadAllocatedBytes_ = input.readSInt64();
                break;
              }
              case 154: {
                if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                  gcActivity_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity>();
                  mutable_bitField0_ |= 0x00040000;
                }
                gcActivity_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.parser(), extensionRegistry));
                break;
              }
              case 160: {

                entryCount_ = input.readInt32();
                break;
              }
              case 168: {

                entryLimitExceeded_ = input.readBool();
                break;
              }
              case 176: {

                profileSampleCount_ = input.readInt64();
                break;
              }
              case 184: {

                profileSampleLimitExceeded_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
            attribute_ = java.util.Collections.unmodifiableList(attribute_);
          }
          if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
            detailEntry_ = java.util.Collections.unmodifiableList(detailEntry_);
          }
          if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
            gcActivity_ = java.util.Collections.unmodifiableList(gcActivity_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Header_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.Builder.class);
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object id_;
      /**
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PARTIAL_FIELD_NUMBER = 2;
      private boolean partial_;
      /**
       * <code>optional bool partial = 2;</code>
       */
      public boolean getPartial() {
        return partial_;
      }

      public static final int SLOW_FIELD_NUMBER = 3;
      private boolean slow_;
      /**
       * <code>optional bool slow = 3;</code>
       */
      public boolean getSlow() {
        return slow_;
      }

      public static final int START_TIME_FIELD_NUMBER = 4;
      private long startTime_;
      /**
       * <code>optional int64 start_time = 4;</code>
       */
      public long getStartTime() {
        return startTime_;
      }

      public static final int CAPTURE_TIME_FIELD_NUMBER = 5;
      private long captureTime_;
      /**
       * <code>optional int64 capture_time = 5;</code>
       */
      public long getCaptureTime() {
        return captureTime_;
      }

      public static final int DURATION_NANOS_FIELD_NUMBER = 6;
      private long durationNanos_;
      /**
       * <code>optional int64 duration_nanos = 6;</code>
       */
      public long getDurationNanos() {
        return durationNanos_;
      }

      public static final int TRANSACTION_TYPE_FIELD_NUMBER = 7;
      private volatile java.lang.Object transactionType_;
      /**
       * <code>optional string transaction_type = 7;</code>
       */
      public java.lang.String getTransactionType() {
        java.lang.Object ref = transactionType_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          transactionType_ = s;
          return s;
        }
      }
      /**
       * <code>optional string transaction_type = 7;</code>
       */
      public com.google.protobuf.ByteString
          getTransactionTypeBytes() {
        java.lang.Object ref = transactionType_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transactionType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TRANSACTION_NAME_FIELD_NUMBER = 8;
      private volatile java.lang.Object transactionName_;
      /**
       * <code>optional string transaction_name = 8;</code>
       */
      public java.lang.String getTransactionName() {
        java.lang.Object ref = transactionName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          transactionName_ = s;
          return s;
        }
      }
      /**
       * <code>optional string transaction_name = 8;</code>
       */
      public com.google.protobuf.ByteString
          getTransactionNameBytes() {
        java.lang.Object ref = transactionName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transactionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int HEADLINE_FIELD_NUMBER = 9;
      private volatile java.lang.Object headline_;
      /**
       * <code>optional string headline = 9;</code>
       */
      public java.lang.String getHeadline() {
        java.lang.Object ref = headline_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          headline_ = s;
          return s;
        }
      }
      /**
       * <code>optional string headline = 9;</code>
       */
      public com.google.protobuf.ByteString
          getHeadlineBytes() {
        java.lang.Object ref = headline_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headline_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int USER_FIELD_NUMBER = 10;
      private volatile java.lang.Object user_;
      /**
       * <code>optional string user = 10;</code>
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        }
      }
      /**
       * <code>optional string user = 10;</code>
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ATTRIBUTE_FIELD_NUMBER = 11;
      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute> attribute_;
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute> getAttributeList() {
        return attribute_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.AttributeOrBuilder> 
          getAttributeOrBuilderList() {
        return attribute_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
       */
      public int getAttributeCount() {
        return attribute_.size();
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute getAttribute(int index) {
        return attribute_.get(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.AttributeOrBuilder getAttributeOrBuilder(
          int index) {
        return attribute_.get(index);
      }

      public static final int DETAIL_ENTRY_FIELD_NUMBER = 12;
      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> detailEntry_;
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> getDetailEntryList() {
        return detailEntry_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
          getDetailEntryOrBuilderList() {
        return detailEntry_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
       */
      public int getDetailEntryCount() {
        return detailEntry_.size();
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getDetailEntry(int index) {
        return detailEntry_.get(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder getDetailEntryOrBuilder(
          int index) {
        return detailEntry_.get(index);
      }

      public static final int ERROR_FIELD_NUMBER = 13;
      private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error error_;
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
       */
      public boolean hasError() {
        return error_ != null;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error getError() {
        return error_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder getErrorOrBuilder() {
        return getError();
      }

      public static final int ROOT_TIMER_FIELD_NUMBER = 14;
      private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer rootTimer_;
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
       */
      public boolean hasRootTimer() {
        return rootTimer_ != null;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer getRootTimer() {
        return rootTimer_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.getDefaultInstance() : rootTimer_;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder getRootTimerOrBuilder() {
        return getRootTimer();
      }

      public static final int THREAD_CPU_NANOS_FIELD_NUMBER = 15;
      private long threadCpuNanos_;
      /**
       * <code>optional sint64 thread_cpu_nanos = 15;</code>
       *
       * <pre>
       * -1 means N/A
       * </pre>
       */
      public long getThreadCpuNanos() {
        return threadCpuNanos_;
      }

      public static final int THREAD_BLOCKED_NANOS_FIELD_NUMBER = 16;
      private long threadBlockedNanos_;
      /**
       * <code>optional sint64 thread_blocked_nanos = 16;</code>
       *
       * <pre>
       * -1 means N/A
       * </pre>
       */
      public long getThreadBlockedNanos() {
        return threadBlockedNanos_;
      }

      public static final int THREAD_WAITED_NANOS_FIELD_NUMBER = 17;
      private long threadWaitedNanos_;
      /**
       * <code>optional sint64 thread_waited_nanos = 17;</code>
       *
       * <pre>
       * -1 means N/A
       * </pre>
       */
      public long getThreadWaitedNanos() {
        return threadWaitedNanos_;
      }

      public static final int THREAD_ALLOCATED_BYTES_FIELD_NUMBER = 18;
      private long threadAllocatedBytes_;
      /**
       * <code>optional sint64 thread_allocated_bytes = 18;</code>
       *
       * <pre>
       * -1 means N/A
       * </pre>
       */
      public long getThreadAllocatedBytes() {
        return threadAllocatedBytes_;
      }

      public static final int GC_ACTIVITY_FIELD_NUMBER = 19;
      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity> gcActivity_;
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity> getGcActivityList() {
        return gcActivity_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivityOrBuilder> 
          getGcActivityOrBuilderList() {
        return gcActivity_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
       */
      public int getGcActivityCount() {
        return gcActivity_.size();
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity getGcActivity(int index) {
        return gcActivity_.get(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivityOrBuilder getGcActivityOrBuilder(
          int index) {
        return gcActivity_.get(index);
      }

      public static final int ENTRY_COUNT_FIELD_NUMBER = 20;
      private int entryCount_;
      /**
       * <code>optional int32 entry_count = 20;</code>
       */
      public int getEntryCount() {
        return entryCount_;
      }

      public static final int ENTRY_LIMIT_EXCEEDED_FIELD_NUMBER = 21;
      private boolean entryLimitExceeded_;
      /**
       * <code>optional bool entry_limit_exceeded = 21;</code>
       */
      public boolean getEntryLimitExceeded() {
        return entryLimitExceeded_;
      }

      public static final int PROFILE_SAMPLE_COUNT_FIELD_NUMBER = 22;
      private long profileSampleCount_;
      /**
       * <code>optional int64 profile_sample_count = 22;</code>
       */
      public long getProfileSampleCount() {
        return profileSampleCount_;
      }

      public static final int PROFILE_SAMPLE_LIMIT_EXCEEDED_FIELD_NUMBER = 23;
      private boolean profileSampleLimitExceeded_;
      /**
       * <code>optional bool profile_sample_limit_exceeded = 23;</code>
       */
      public boolean getProfileSampleLimitExceeded() {
        return profileSampleLimitExceeded_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getIdBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
        }
        if (partial_ != false) {
          output.writeBool(2, partial_);
        }
        if (slow_ != false) {
          output.writeBool(3, slow_);
        }
        if (startTime_ != 0L) {
          output.writeInt64(4, startTime_);
        }
        if (captureTime_ != 0L) {
          output.writeInt64(5, captureTime_);
        }
        if (durationNanos_ != 0L) {
          output.writeInt64(6, durationNanos_);
        }
        if (!getTransactionTypeBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 7, transactionType_);
        }
        if (!getTransactionNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 8, transactionName_);
        }
        if (!getHeadlineBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 9, headline_);
        }
        if (!getUserBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 10, user_);
        }
        for (int i = 0; i < attribute_.size(); i++) {
          output.writeMessage(11, attribute_.get(i));
        }
        for (int i = 0; i < detailEntry_.size(); i++) {
          output.writeMessage(12, detailEntry_.get(i));
        }
        if (error_ != null) {
          output.writeMessage(13, getError());
        }
        if (rootTimer_ != null) {
          output.writeMessage(14, getRootTimer());
        }
        if (threadCpuNanos_ != 0L) {
          output.writeSInt64(15, threadCpuNanos_);
        }
        if (threadBlockedNanos_ != 0L) {
          output.writeSInt64(16, threadBlockedNanos_);
        }
        if (threadWaitedNanos_ != 0L) {
          output.writeSInt64(17, threadWaitedNanos_);
        }
        if (threadAllocatedBytes_ != 0L) {
          output.writeSInt64(18, threadAllocatedBytes_);
        }
        for (int i = 0; i < gcActivity_.size(); i++) {
          output.writeMessage(19, gcActivity_.get(i));
        }
        if (entryCount_ != 0) {
          output.writeInt32(20, entryCount_);
        }
        if (entryLimitExceeded_ != false) {
          output.writeBool(21, entryLimitExceeded_);
        }
        if (profileSampleCount_ != 0L) {
          output.writeInt64(22, profileSampleCount_);
        }
        if (profileSampleLimitExceeded_ != false) {
          output.writeBool(23, profileSampleLimitExceeded_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getIdBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
        }
        if (partial_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, partial_);
        }
        if (slow_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, slow_);
        }
        if (startTime_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(4, startTime_);
        }
        if (captureTime_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(5, captureTime_);
        }
        if (durationNanos_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(6, durationNanos_);
        }
        if (!getTransactionTypeBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(7, transactionType_);
        }
        if (!getTransactionNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(8, transactionName_);
        }
        if (!getHeadlineBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(9, headline_);
        }
        if (!getUserBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(10, user_);
        }
        for (int i = 0; i < attribute_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, attribute_.get(i));
        }
        for (int i = 0; i < detailEntry_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, detailEntry_.get(i));
        }
        if (error_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, getError());
        }
        if (rootTimer_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, getRootTimer());
        }
        if (threadCpuNanos_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(15, threadCpuNanos_);
        }
        if (threadBlockedNanos_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(16, threadBlockedNanos_);
        }
        if (threadWaitedNanos_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(17, threadWaitedNanos_);
        }
        if (threadAllocatedBytes_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(18, threadAllocatedBytes_);
        }
        for (int i = 0; i < gcActivity_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(19, gcActivity_.get(i));
        }
        if (entryCount_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(20, entryCount_);
        }
        if (entryLimitExceeded_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(21, entryLimitExceeded_);
        }
        if (profileSampleCount_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(22, profileSampleCount_);
        }
        if (profileSampleLimitExceeded_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(23, profileSampleLimitExceeded_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org_glowroot_collector_spi.Trace.Header}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace.Header)
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.HeaderOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Header_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Header_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.Builder.class);
        }

        // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.Header.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getAttributeFieldBuilder();
            getDetailEntryFieldBuilder();
            getGcActivityFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          id_ = "";

          partial_ = false;

          slow_ = false;

          startTime_ = 0L;

          captureTime_ = 0L;

          durationNanos_ = 0L;

          transactionType_ = "";

          transactionName_ = "";

          headline_ = "";

          user_ = "";

          if (attributeBuilder_ == null) {
            attribute_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            attributeBuilder_.clear();
          }
          if (detailEntryBuilder_ == null) {
            detailEntry_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            detailEntryBuilder_.clear();
          }
          if (errorBuilder_ == null) {
            error_ = null;
          } else {
            error_ = null;
            errorBuilder_ = null;
          }
          if (rootTimerBuilder_ == null) {
            rootTimer_ = null;
          } else {
            rootTimer_ = null;
            rootTimerBuilder_ = null;
          }
          threadCpuNanos_ = 0L;

          threadBlockedNanos_ = 0L;

          threadWaitedNanos_ = 0L;

          threadAllocatedBytes_ = 0L;

          if (gcActivityBuilder_ == null) {
            gcActivity_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            gcActivityBuilder_.clear();
          }
          entryCount_ = 0;

          entryLimitExceeded_ = false;

          profileSampleCount_ = 0L;

          profileSampleLimitExceeded_ = false;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Header_descriptor;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header getDefaultInstanceForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.getDefaultInstance();
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header build() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header buildPartial() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.id_ = id_;
          result.partial_ = partial_;
          result.slow_ = slow_;
          result.startTime_ = startTime_;
          result.captureTime_ = captureTime_;
          result.durationNanos_ = durationNanos_;
          result.transactionType_ = transactionType_;
          result.transactionName_ = transactionName_;
          result.headline_ = headline_;
          result.user_ = user_;
          if (attributeBuilder_ == null) {
            if (((bitField0_ & 0x00000400) == 0x00000400)) {
              attribute_ = java.util.Collections.unmodifiableList(attribute_);
              bitField0_ = (bitField0_ & ~0x00000400);
            }
            result.attribute_ = attribute_;
          } else {
            result.attribute_ = attributeBuilder_.build();
          }
          if (detailEntryBuilder_ == null) {
            if (((bitField0_ & 0x00000800) == 0x00000800)) {
              detailEntry_ = java.util.Collections.unmodifiableList(detailEntry_);
              bitField0_ = (bitField0_ & ~0x00000800);
            }
            result.detailEntry_ = detailEntry_;
          } else {
            result.detailEntry_ = detailEntryBuilder_.build();
          }
          if (errorBuilder_ == null) {
            result.error_ = error_;
          } else {
            result.error_ = errorBuilder_.build();
          }
          if (rootTimerBuilder_ == null) {
            result.rootTimer_ = rootTimer_;
          } else {
            result.rootTimer_ = rootTimerBuilder_.build();
          }
          result.threadCpuNanos_ = threadCpuNanos_;
          result.threadBlockedNanos_ = threadBlockedNanos_;
          result.threadWaitedNanos_ = threadWaitedNanos_;
          result.threadAllocatedBytes_ = threadAllocatedBytes_;
          if (gcActivityBuilder_ == null) {
            if (((bitField0_ & 0x00040000) == 0x00040000)) {
              gcActivity_ = java.util.Collections.unmodifiableList(gcActivity_);
              bitField0_ = (bitField0_ & ~0x00040000);
            }
            result.gcActivity_ = gcActivity_;
          } else {
            result.gcActivity_ = gcActivityBuilder_.build();
          }
          result.entryCount_ = entryCount_;
          result.entryLimitExceeded_ = entryLimitExceeded_;
          result.profileSampleCount_ = profileSampleCount_;
          result.profileSampleLimitExceeded_ = profileSampleLimitExceeded_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header) {
            return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header other) {
          if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.getDefaultInstance()) return this;
          if (!other.getId().isEmpty()) {
            id_ = other.id_;
            onChanged();
          }
          if (other.getPartial() != false) {
            setPartial(other.getPartial());
          }
          if (other.getSlow() != false) {
            setSlow(other.getSlow());
          }
          if (other.getStartTime() != 0L) {
            setStartTime(other.getStartTime());
          }
          if (other.getCaptureTime() != 0L) {
            setCaptureTime(other.getCaptureTime());
          }
          if (other.getDurationNanos() != 0L) {
            setDurationNanos(other.getDurationNanos());
          }
          if (!other.getTransactionType().isEmpty()) {
            transactionType_ = other.transactionType_;
            onChanged();
          }
          if (!other.getTransactionName().isEmpty()) {
            transactionName_ = other.transactionName_;
            onChanged();
          }
          if (!other.getHeadline().isEmpty()) {
            headline_ = other.headline_;
            onChanged();
          }
          if (!other.getUser().isEmpty()) {
            user_ = other.user_;
            onChanged();
          }
          if (attributeBuilder_ == null) {
            if (!other.attribute_.isEmpty()) {
              if (attribute_.isEmpty()) {
                attribute_ = other.attribute_;
                bitField0_ = (bitField0_ & ~0x00000400);
              } else {
                ensureAttributeIsMutable();
                attribute_.addAll(other.attribute_);
              }
              onChanged();
            }
          } else {
            if (!other.attribute_.isEmpty()) {
              if (attributeBuilder_.isEmpty()) {
                attributeBuilder_.dispose();
                attributeBuilder_ = null;
                attribute_ = other.attribute_;
                bitField0_ = (bitField0_ & ~0x00000400);
                attributeBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAttributeFieldBuilder() : null;
              } else {
                attributeBuilder_.addAllMessages(other.attribute_);
              }
            }
          }
          if (detailEntryBuilder_ == null) {
            if (!other.detailEntry_.isEmpty()) {
              if (detailEntry_.isEmpty()) {
                detailEntry_ = other.detailEntry_;
                bitField0_ = (bitField0_ & ~0x00000800);
              } else {
                ensureDetailEntryIsMutable();
                detailEntry_.addAll(other.detailEntry_);
              }
              onChanged();
            }
          } else {
            if (!other.detailEntry_.isEmpty()) {
              if (detailEntryBuilder_.isEmpty()) {
                detailEntryBuilder_.dispose();
                detailEntryBuilder_ = null;
                detailEntry_ = other.detailEntry_;
                bitField0_ = (bitField0_ & ~0x00000800);
                detailEntryBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getDetailEntryFieldBuilder() : null;
              } else {
                detailEntryBuilder_.addAllMessages(other.detailEntry_);
              }
            }
          }
          if (other.hasError()) {
            mergeError(other.getError());
          }
          if (other.hasRootTimer()) {
            mergeRootTimer(other.getRootTimer());
          }
          if (other.getThreadCpuNanos() != 0L) {
            setThreadCpuNanos(other.getThreadCpuNanos());
          }
          if (other.getThreadBlockedNanos() != 0L) {
            setThreadBlockedNanos(other.getThreadBlockedNanos());
          }
          if (other.getThreadWaitedNanos() != 0L) {
            setThreadWaitedNanos(other.getThreadWaitedNanos());
          }
          if (other.getThreadAllocatedBytes() != 0L) {
            setThreadAllocatedBytes(other.getThreadAllocatedBytes());
          }
          if (gcActivityBuilder_ == null) {
            if (!other.gcActivity_.isEmpty()) {
              if (gcActivity_.isEmpty()) {
                gcActivity_ = other.gcActivity_;
                bitField0_ = (bitField0_ & ~0x00040000);
              } else {
                ensureGcActivityIsMutable();
                gcActivity_.addAll(other.gcActivity_);
              }
              onChanged();
            }
          } else {
            if (!other.gcActivity_.isEmpty()) {
              if (gcActivityBuilder_.isEmpty()) {
                gcActivityBuilder_.dispose();
                gcActivityBuilder_ = null;
                gcActivity_ = other.gcActivity_;
                bitField0_ = (bitField0_ & ~0x00040000);
                gcActivityBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getGcActivityFieldBuilder() : null;
              } else {
                gcActivityBuilder_.addAllMessages(other.gcActivity_);
              }
            }
          }
          if (other.getEntryCount() != 0) {
            setEntryCount(other.getEntryCount());
          }
          if (other.getEntryLimitExceeded() != false) {
            setEntryLimitExceeded(other.getEntryLimitExceeded());
          }
          if (other.getProfileSampleCount() != 0L) {
            setProfileSampleCount(other.getProfileSampleCount());
          }
          if (other.getProfileSampleLimitExceeded() != false) {
            setProfileSampleLimitExceeded(other.getProfileSampleLimitExceeded());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object id_ = "";
        /**
         * <code>optional string id = 1;</code>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            id_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         */
        public Builder clearId() {
          
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          id_ = value;
          onChanged();
          return this;
        }

        private boolean partial_ ;
        /**
         * <code>optional bool partial = 2;</code>
         */
        public boolean getPartial() {
          return partial_;
        }
        /**
         * <code>optional bool partial = 2;</code>
         */
        public Builder setPartial(boolean value) {
          
          partial_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool partial = 2;</code>
         */
        public Builder clearPartial() {
          
          partial_ = false;
          onChanged();
          return this;
        }

        private boolean slow_ ;
        /**
         * <code>optional bool slow = 3;</code>
         */
        public boolean getSlow() {
          return slow_;
        }
        /**
         * <code>optional bool slow = 3;</code>
         */
        public Builder setSlow(boolean value) {
          
          slow_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool slow = 3;</code>
         */
        public Builder clearSlow() {
          
          slow_ = false;
          onChanged();
          return this;
        }

        private long startTime_ ;
        /**
         * <code>optional int64 start_time = 4;</code>
         */
        public long getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional int64 start_time = 4;</code>
         */
        public Builder setStartTime(long value) {
          
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 start_time = 4;</code>
         */
        public Builder clearStartTime() {
          
          startTime_ = 0L;
          onChanged();
          return this;
        }

        private long captureTime_ ;
        /**
         * <code>optional int64 capture_time = 5;</code>
         */
        public long getCaptureTime() {
          return captureTime_;
        }
        /**
         * <code>optional int64 capture_time = 5;</code>
         */
        public Builder setCaptureTime(long value) {
          
          captureTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 capture_time = 5;</code>
         */
        public Builder clearCaptureTime() {
          
          captureTime_ = 0L;
          onChanged();
          return this;
        }

        private long durationNanos_ ;
        /**
         * <code>optional int64 duration_nanos = 6;</code>
         */
        public long getDurationNanos() {
          return durationNanos_;
        }
        /**
         * <code>optional int64 duration_nanos = 6;</code>
         */
        public Builder setDurationNanos(long value) {
          
          durationNanos_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 duration_nanos = 6;</code>
         */
        public Builder clearDurationNanos() {
          
          durationNanos_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object transactionType_ = "";
        /**
         * <code>optional string transaction_type = 7;</code>
         */
        public java.lang.String getTransactionType() {
          java.lang.Object ref = transactionType_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            transactionType_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string transaction_type = 7;</code>
         */
        public com.google.protobuf.ByteString
            getTransactionTypeBytes() {
          java.lang.Object ref = transactionType_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            transactionType_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string transaction_type = 7;</code>
         */
        public Builder setTransactionType(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          transactionType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string transaction_type = 7;</code>
         */
        public Builder clearTransactionType() {
          
          transactionType_ = getDefaultInstance().getTransactionType();
          onChanged();
          return this;
        }
        /**
         * <code>optional string transaction_type = 7;</code>
         */
        public Builder setTransactionTypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          transactionType_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object transactionName_ = "";
        /**
         * <code>optional string transaction_name = 8;</code>
         */
        public java.lang.String getTransactionName() {
          java.lang.Object ref = transactionName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            transactionName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string transaction_name = 8;</code>
         */
        public com.google.protobuf.ByteString
            getTransactionNameBytes() {
          java.lang.Object ref = transactionName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            transactionName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string transaction_name = 8;</code>
         */
        public Builder setTransactionName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          transactionName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string transaction_name = 8;</code>
         */
        public Builder clearTransactionName() {
          
          transactionName_ = getDefaultInstance().getTransactionName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string transaction_name = 8;</code>
         */
        public Builder setTransactionNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          transactionName_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object headline_ = "";
        /**
         * <code>optional string headline = 9;</code>
         */
        public java.lang.String getHeadline() {
          java.lang.Object ref = headline_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            headline_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string headline = 9;</code>
         */
        public com.google.protobuf.ByteString
            getHeadlineBytes() {
          java.lang.Object ref = headline_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            headline_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string headline = 9;</code>
         */
        public Builder setHeadline(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          headline_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string headline = 9;</code>
         */
        public Builder clearHeadline() {
          
          headline_ = getDefaultInstance().getHeadline();
          onChanged();
          return this;
        }
        /**
         * <code>optional string headline = 9;</code>
         */
        public Builder setHeadlineBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          headline_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object user_ = "";
        /**
         * <code>optional string user = 10;</code>
         */
        public java.lang.String getUser() {
          java.lang.Object ref = user_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            user_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string user = 10;</code>
         */
        public com.google.protobuf.ByteString
            getUserBytes() {
          java.lang.Object ref = user_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            user_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string user = 10;</code>
         */
        public Builder setUser(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          user_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string user = 10;</code>
         */
        public Builder clearUser() {
          
          user_ = getDefaultInstance().getUser();
          onChanged();
          return this;
        }
        /**
         * <code>optional string user = 10;</code>
         */
        public Builder setUserBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          user_ = value;
          onChanged();
          return this;
        }

        private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute> attribute_ =
          java.util.Collections.emptyList();
        private void ensureAttributeIsMutable() {
          if (!((bitField0_ & 0x00000400) == 0x00000400)) {
            attribute_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute>(attribute_);
            bitField0_ |= 0x00000400;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.AttributeOrBuilder> attributeBuilder_;

        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute> getAttributeList() {
          if (attributeBuilder_ == null) {
            return java.util.Collections.unmodifiableList(attribute_);
          } else {
            return attributeBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public int getAttributeCount() {
          if (attributeBuilder_ == null) {
            return attribute_.size();
          } else {
            return attributeBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute getAttribute(int index) {
          if (attributeBuilder_ == null) {
            return attribute_.get(index);
          } else {
            return attributeBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public Builder setAttribute(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute value) {
          if (attributeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAttributeIsMutable();
            attribute_.set(index, value);
            onChanged();
          } else {
            attributeBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public Builder setAttribute(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder builderForValue) {
          if (attributeBuilder_ == null) {
            ensureAttributeIsMutable();
            attribute_.set(index, builderForValue.build());
            onChanged();
          } else {
            attributeBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public Builder addAttribute(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute value) {
          if (attributeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAttributeIsMutable();
            attribute_.add(value);
            onChanged();
          } else {
            attributeBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public Builder addAttribute(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute value) {
          if (attributeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAttributeIsMutable();
            attribute_.add(index, value);
            onChanged();
          } else {
            attributeBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public Builder addAttribute(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder builderForValue) {
          if (attributeBuilder_ == null) {
            ensureAttributeIsMutable();
            attribute_.add(builderForValue.build());
            onChanged();
          } else {
            attributeBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public Builder addAttribute(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder builderForValue) {
          if (attributeBuilder_ == null) {
            ensureAttributeIsMutable();
            attribute_.add(index, builderForValue.build());
            onChanged();
          } else {
            attributeBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public Builder addAllAttribute(
            java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute> values) {
          if (attributeBuilder_ == null) {
            ensureAttributeIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, attribute_);
            onChanged();
          } else {
            attributeBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public Builder clearAttribute() {
          if (attributeBuilder_ == null) {
            attribute_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000400);
            onChanged();
          } else {
            attributeBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public Builder removeAttribute(int index) {
          if (attributeBuilder_ == null) {
            ensureAttributeIsMutable();
            attribute_.remove(index);
            onChanged();
          } else {
            attributeBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder getAttributeBuilder(
            int index) {
          return getAttributeFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.AttributeOrBuilder getAttributeOrBuilder(
            int index) {
          if (attributeBuilder_ == null) {
            return attribute_.get(index);  } else {
            return attributeBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.AttributeOrBuilder> 
             getAttributeOrBuilderList() {
          if (attributeBuilder_ != null) {
            return attributeBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(attribute_);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder addAttributeBuilder() {
          return getAttributeFieldBuilder().addBuilder(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder addAttributeBuilder(
            int index) {
          return getAttributeFieldBuilder().addBuilder(
              index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Attribute attribute = 11;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder> 
             getAttributeBuilderList() {
          return getAttributeFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.AttributeOrBuilder> 
            getAttributeFieldBuilder() {
          if (attributeBuilder_ == null) {
            attributeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.AttributeOrBuilder>(
                    attribute_,
                    ((bitField0_ & 0x00000400) == 0x00000400),
                    getParentForChildren(),
                    isClean());
            attribute_ = null;
          }
          return attributeBuilder_;
        }

        private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> detailEntry_ =
          java.util.Collections.emptyList();
        private void ensureDetailEntryIsMutable() {
          if (!((bitField0_ & 0x00000800) == 0x00000800)) {
            detailEntry_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry>(detailEntry_);
            bitField0_ |= 0x00000800;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> detailEntryBuilder_;

        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> getDetailEntryList() {
          if (detailEntryBuilder_ == null) {
            return java.util.Collections.unmodifiableList(detailEntry_);
          } else {
            return detailEntryBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public int getDetailEntryCount() {
          if (detailEntryBuilder_ == null) {
            return detailEntry_.size();
          } else {
            return detailEntryBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getDetailEntry(int index) {
          if (detailEntryBuilder_ == null) {
            return detailEntry_.get(index);
          } else {
            return detailEntryBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public Builder setDetailEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry value) {
          if (detailEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDetailEntryIsMutable();
            detailEntry_.set(index, value);
            onChanged();
          } else {
            detailEntryBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public Builder setDetailEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
          if (detailEntryBuilder_ == null) {
            ensureDetailEntryIsMutable();
            detailEntry_.set(index, builderForValue.build());
            onChanged();
          } else {
            detailEntryBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public Builder addDetailEntry(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry value) {
          if (detailEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDetailEntryIsMutable();
            detailEntry_.add(value);
            onChanged();
          } else {
            detailEntryBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public Builder addDetailEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry value) {
          if (detailEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDetailEntryIsMutable();
            detailEntry_.add(index, value);
            onChanged();
          } else {
            detailEntryBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public Builder addDetailEntry(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
          if (detailEntryBuilder_ == null) {
            ensureDetailEntryIsMutable();
            detailEntry_.add(builderForValue.build());
            onChanged();
          } else {
            detailEntryBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public Builder addDetailEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
          if (detailEntryBuilder_ == null) {
            ensureDetailEntryIsMutable();
            detailEntry_.add(index, builderForValue.build());
            onChanged();
          } else {
            detailEntryBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public Builder addAllDetailEntry(
            java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> values) {
          if (detailEntryBuilder_ == null) {
            ensureDetailEntryIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, detailEntry_);
            onChanged();
          } else {
            detailEntryBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public Builder clearDetailEntry() {
          if (detailEntryBuilder_ == null) {
            detailEntry_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000800);
            onChanged();
          } else {
            detailEntryBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public Builder removeDetailEntry(int index) {
          if (detailEntryBuilder_ == null) {
            ensureDetailEntryIsMutable();
            detailEntry_.remove(index);
            onChanged();
          } else {
            detailEntryBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder getDetailEntryBuilder(
            int index) {
          return getDetailEntryFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder getDetailEntryOrBuilder(
            int index) {
          if (detailEntryBuilder_ == null) {
            return detailEntry_.get(index);  } else {
            return detailEntryBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
             getDetailEntryOrBuilderList() {
          if (detailEntryBuilder_ != null) {
            return detailEntryBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(detailEntry_);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder addDetailEntryBuilder() {
          return getDetailEntryFieldBuilder().addBuilder(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder addDetailEntryBuilder(
            int index) {
          return getDetailEntryFieldBuilder().addBuilder(
              index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 12;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder> 
             getDetailEntryBuilderList() {
          return getDetailEntryFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
            getDetailEntryFieldBuilder() {
          if (detailEntryBuilder_ == null) {
            detailEntryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder>(
                    detailEntry_,
                    ((bitField0_ & 0x00000800) == 0x00000800),
                    getParentForChildren(),
                    isClean());
            detailEntry_ = null;
          }
          return detailEntryBuilder_;
        }

        private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error error_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder> errorBuilder_;
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
         */
        public boolean hasError() {
          return errorBuilder_ != null || error_ != null;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error getError() {
          if (errorBuilder_ == null) {
            return error_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
          } else {
            return errorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
         */
        public Builder setError(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error value) {
          if (errorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            error_ = value;
            onChanged();
          } else {
            errorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
         */
        public Builder setError(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder builderForValue) {
          if (errorBuilder_ == null) {
            error_ = builderForValue.build();
            onChanged();
          } else {
            errorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
         */
        public Builder mergeError(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error value) {
          if (errorBuilder_ == null) {
            if (error_ != null) {
              error_ =
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.newBuilder(error_).mergeFrom(value).buildPartial();
            } else {
              error_ = value;
            }
            onChanged();
          } else {
            errorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
         */
        public Builder clearError() {
          if (errorBuilder_ == null) {
            error_ = null;
            onChanged();
          } else {
            error_ = null;
            errorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder getErrorBuilder() {
          
          onChanged();
          return getErrorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder getErrorOrBuilder() {
          if (errorBuilder_ != null) {
            return errorBuilder_.getMessageOrBuilder();
          } else {
            return error_ == null ?
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
          }
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 13;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder> 
            getErrorFieldBuilder() {
          if (errorBuilder_ == null) {
            errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder>(
                    getError(),
                    getParentForChildren(),
                    isClean());
            error_ = null;
          }
          return errorBuilder_;
        }

        private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer rootTimer_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder> rootTimerBuilder_;
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
         */
        public boolean hasRootTimer() {
          return rootTimerBuilder_ != null || rootTimer_ != null;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer getRootTimer() {
          if (rootTimerBuilder_ == null) {
            return rootTimer_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.getDefaultInstance() : rootTimer_;
          } else {
            return rootTimerBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
         */
        public Builder setRootTimer(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer value) {
          if (rootTimerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            rootTimer_ = value;
            onChanged();
          } else {
            rootTimerBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
         */
        public Builder setRootTimer(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
          if (rootTimerBuilder_ == null) {
            rootTimer_ = builderForValue.build();
            onChanged();
          } else {
            rootTimerBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
         */
        public Builder mergeRootTimer(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer value) {
          if (rootTimerBuilder_ == null) {
            if (rootTimer_ != null) {
              rootTimer_ =
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.newBuilder(rootTimer_).mergeFrom(value).buildPartial();
            } else {
              rootTimer_ = value;
            }
            onChanged();
          } else {
            rootTimerBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
         */
        public Builder clearRootTimer() {
          if (rootTimerBuilder_ == null) {
            rootTimer_ = null;
            onChanged();
          } else {
            rootTimer_ = null;
            rootTimerBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder getRootTimerBuilder() {
          
          onChanged();
          return getRootTimerFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder getRootTimerOrBuilder() {
          if (rootTimerBuilder_ != null) {
            return rootTimerBuilder_.getMessageOrBuilder();
          } else {
            return rootTimer_ == null ?
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.getDefaultInstance() : rootTimer_;
          }
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Timer root_timer = 14;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder> 
            getRootTimerFieldBuilder() {
          if (rootTimerBuilder_ == null) {
            rootTimerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder>(
                    getRootTimer(),
                    getParentForChildren(),
                    isClean());
            rootTimer_ = null;
          }
          return rootTimerBuilder_;
        }

        private long threadCpuNanos_ ;
        /**
         * <code>optional sint64 thread_cpu_nanos = 15;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public long getThreadCpuNanos() {
          return threadCpuNanos_;
        }
        /**
         * <code>optional sint64 thread_cpu_nanos = 15;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public Builder setThreadCpuNanos(long value) {
          
          threadCpuNanos_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint64 thread_cpu_nanos = 15;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public Builder clearThreadCpuNanos() {
          
          threadCpuNanos_ = 0L;
          onChanged();
          return this;
        }

        private long threadBlockedNanos_ ;
        /**
         * <code>optional sint64 thread_blocked_nanos = 16;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public long getThreadBlockedNanos() {
          return threadBlockedNanos_;
        }
        /**
         * <code>optional sint64 thread_blocked_nanos = 16;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public Builder setThreadBlockedNanos(long value) {
          
          threadBlockedNanos_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint64 thread_blocked_nanos = 16;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public Builder clearThreadBlockedNanos() {
          
          threadBlockedNanos_ = 0L;
          onChanged();
          return this;
        }

        private long threadWaitedNanos_ ;
        /**
         * <code>optional sint64 thread_waited_nanos = 17;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public long getThreadWaitedNanos() {
          return threadWaitedNanos_;
        }
        /**
         * <code>optional sint64 thread_waited_nanos = 17;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public Builder setThreadWaitedNanos(long value) {
          
          threadWaitedNanos_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint64 thread_waited_nanos = 17;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public Builder clearThreadWaitedNanos() {
          
          threadWaitedNanos_ = 0L;
          onChanged();
          return this;
        }

        private long threadAllocatedBytes_ ;
        /**
         * <code>optional sint64 thread_allocated_bytes = 18;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public long getThreadAllocatedBytes() {
          return threadAllocatedBytes_;
        }
        /**
         * <code>optional sint64 thread_allocated_bytes = 18;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public Builder setThreadAllocatedBytes(long value) {
          
          threadAllocatedBytes_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint64 thread_allocated_bytes = 18;</code>
         *
         * <pre>
         * -1 means N/A
         * </pre>
         */
        public Builder clearThreadAllocatedBytes() {
          
          threadAllocatedBytes_ = 0L;
          onChanged();
          return this;
        }

        private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity> gcActivity_ =
          java.util.Collections.emptyList();
        private void ensureGcActivityIsMutable() {
          if (!((bitField0_ & 0x00040000) == 0x00040000)) {
            gcActivity_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity>(gcActivity_);
            bitField0_ |= 0x00040000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivityOrBuilder> gcActivityBuilder_;

        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity> getGcActivityList() {
          if (gcActivityBuilder_ == null) {
            return java.util.Collections.unmodifiableList(gcActivity_);
          } else {
            return gcActivityBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public int getGcActivityCount() {
          if (gcActivityBuilder_ == null) {
            return gcActivity_.size();
          } else {
            return gcActivityBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity getGcActivity(int index) {
          if (gcActivityBuilder_ == null) {
            return gcActivity_.get(index);
          } else {
            return gcActivityBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public Builder setGcActivity(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity value) {
          if (gcActivityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGcActivityIsMutable();
            gcActivity_.set(index, value);
            onChanged();
          } else {
            gcActivityBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public Builder setGcActivity(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder builderForValue) {
          if (gcActivityBuilder_ == null) {
            ensureGcActivityIsMutable();
            gcActivity_.set(index, builderForValue.build());
            onChanged();
          } else {
            gcActivityBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public Builder addGcActivity(org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity value) {
          if (gcActivityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGcActivityIsMutable();
            gcActivity_.add(value);
            onChanged();
          } else {
            gcActivityBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public Builder addGcActivity(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity value) {
          if (gcActivityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGcActivityIsMutable();
            gcActivity_.add(index, value);
            onChanged();
          } else {
            gcActivityBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public Builder addGcActivity(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder builderForValue) {
          if (gcActivityBuilder_ == null) {
            ensureGcActivityIsMutable();
            gcActivity_.add(builderForValue.build());
            onChanged();
          } else {
            gcActivityBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public Builder addGcActivity(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder builderForValue) {
          if (gcActivityBuilder_ == null) {
            ensureGcActivityIsMutable();
            gcActivity_.add(index, builderForValue.build());
            onChanged();
          } else {
            gcActivityBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public Builder addAllGcActivity(
            java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity> values) {
          if (gcActivityBuilder_ == null) {
            ensureGcActivityIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, gcActivity_);
            onChanged();
          } else {
            gcActivityBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public Builder clearGcActivity() {
          if (gcActivityBuilder_ == null) {
            gcActivity_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00040000);
            onChanged();
          } else {
            gcActivityBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public Builder removeGcActivity(int index) {
          if (gcActivityBuilder_ == null) {
            ensureGcActivityIsMutable();
            gcActivity_.remove(index);
            onChanged();
          } else {
            gcActivityBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder getGcActivityBuilder(
            int index) {
          return getGcActivityFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivityOrBuilder getGcActivityOrBuilder(
            int index) {
          if (gcActivityBuilder_ == null) {
            return gcActivity_.get(index);  } else {
            return gcActivityBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivityOrBuilder> 
             getGcActivityOrBuilderList() {
          if (gcActivityBuilder_ != null) {
            return gcActivityBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(gcActivity_);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder addGcActivityBuilder() {
          return getGcActivityFieldBuilder().addBuilder(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder addGcActivityBuilder(
            int index) {
          return getGcActivityFieldBuilder().addBuilder(
              index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.GarbageCollectionActivity gc_activity = 19;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder> 
             getGcActivityBuilderList() {
          return getGcActivityFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivityOrBuilder> 
            getGcActivityFieldBuilder() {
          if (gcActivityBuilder_ == null) {
            gcActivityBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivityOrBuilder>(
                    gcActivity_,
                    ((bitField0_ & 0x00040000) == 0x00040000),
                    getParentForChildren(),
                    isClean());
            gcActivity_ = null;
          }
          return gcActivityBuilder_;
        }

        private int entryCount_ ;
        /**
         * <code>optional int32 entry_count = 20;</code>
         */
        public int getEntryCount() {
          return entryCount_;
        }
        /**
         * <code>optional int32 entry_count = 20;</code>
         */
        public Builder setEntryCount(int value) {
          
          entryCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 entry_count = 20;</code>
         */
        public Builder clearEntryCount() {
          
          entryCount_ = 0;
          onChanged();
          return this;
        }

        private boolean entryLimitExceeded_ ;
        /**
         * <code>optional bool entry_limit_exceeded = 21;</code>
         */
        public boolean getEntryLimitExceeded() {
          return entryLimitExceeded_;
        }
        /**
         * <code>optional bool entry_limit_exceeded = 21;</code>
         */
        public Builder setEntryLimitExceeded(boolean value) {
          
          entryLimitExceeded_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool entry_limit_exceeded = 21;</code>
         */
        public Builder clearEntryLimitExceeded() {
          
          entryLimitExceeded_ = false;
          onChanged();
          return this;
        }

        private long profileSampleCount_ ;
        /**
         * <code>optional int64 profile_sample_count = 22;</code>
         */
        public long getProfileSampleCount() {
          return profileSampleCount_;
        }
        /**
         * <code>optional int64 profile_sample_count = 22;</code>
         */
        public Builder setProfileSampleCount(long value) {
          
          profileSampleCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 profile_sample_count = 22;</code>
         */
        public Builder clearProfileSampleCount() {
          
          profileSampleCount_ = 0L;
          onChanged();
          return this;
        }

        private boolean profileSampleLimitExceeded_ ;
        /**
         * <code>optional bool profile_sample_limit_exceeded = 23;</code>
         */
        public boolean getProfileSampleLimitExceeded() {
          return profileSampleLimitExceeded_;
        }
        /**
         * <code>optional bool profile_sample_limit_exceeded = 23;</code>
         */
        public Builder setProfileSampleLimitExceeded(boolean value) {
          
          profileSampleLimitExceeded_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool profile_sample_limit_exceeded = 23;</code>
         */
        public Builder clearProfileSampleLimitExceeded() {
          
          profileSampleLimitExceeded_ = false;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace.Header)
      }

      // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace.Header)
      private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header();
      }

      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Header>
          PARSER = new com.google.protobuf.AbstractParser<Header>() {
        public Header parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Header(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Header> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Header> getParserForType() {
        return PARSER;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AttributeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace.Attribute)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>repeated string value = 2;</code>
       */
      com.google.protobuf.ProtocolStringList
          getValueList();
      /**
       * <code>repeated string value = 2;</code>
       */
      int getValueCount();
      /**
       * <code>repeated string value = 2;</code>
       */
      java.lang.String getValue(int index);
      /**
       * <code>repeated string value = 2;</code>
       */
      com.google.protobuf.ByteString
          getValueBytes(int index);
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace.Attribute}
     */
    public  static final class Attribute extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace.Attribute)
        AttributeOrBuilder {
      // Use Attribute.newBuilder() to construct.
      private Attribute(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Attribute() {
        name_ = "";
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Attribute(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  value_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000002;
                }
                value_.add(s);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = value_.getUnmodifiableView();
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Attribute_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Attribute_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private com.google.protobuf.LazyStringList value_;
      /**
       * <code>repeated string value = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getValueList() {
        return value_;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public java.lang.String getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes(int index) {
        return value_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
        }
        for (int i = 0; i < value_.size(); i++) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, value_.getRaw(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < value_.size(); i++) {
            dataSize += computeStringSizeNoTag(value_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getValueList().size();
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org_glowroot_collector_spi.Trace.Attribute}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace.Attribute)
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.AttributeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Attribute_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Attribute_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.Builder.class);
        }

        // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.Attribute.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          name_ = "";

          value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Attribute_descriptor;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute getDefaultInstanceForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.getDefaultInstance();
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute build() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute buildPartial() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.name_ = name_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = value_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute) {
            return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute other) {
          if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureValueIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = new com.google.protobuf.LazyStringArrayList(value_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated string value = 2;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getValueList() {
          return value_.getUnmodifiableView();
        }
        /**
         * <code>repeated string value = 2;</code>
         */
        public int getValueCount() {
          return value_.size();
        }
        /**
         * <code>repeated string value = 2;</code>
         */
        public java.lang.String getValue(int index) {
          return value_.get(index);
        }
        /**
         * <code>repeated string value = 2;</code>
         */
        public com.google.protobuf.ByteString
            getValueBytes(int index) {
          return value_.getByteString(index);
        }
        /**
         * <code>repeated string value = 2;</code>
         */
        public Builder setValue(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string value = 2;</code>
         */
        public Builder addValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
          value_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string value = 2;</code>
         */
        public Builder addAllValue(
            java.lang.Iterable<java.lang.String> values) {
          ensureValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, value_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string value = 2;</code>
         */
        public Builder clearValue() {
          value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string value = 2;</code>
         */
        public Builder addValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace.Attribute)
      }

      // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace.Attribute)
      private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute();
      }

      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Attribute>
          PARSER = new com.google.protobuf.AbstractParser<Attribute>() {
        public Attribute parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Attribute(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Attribute> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Attribute> getParserForType() {
        return PARSER;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Attribute getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DetailEntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace.DetailEntry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
       *
       * <pre>
       * one of these two (or neither for an empty value)
       * </pre>
       */
      java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue> 
          getValueList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
       *
       * <pre>
       * one of these two (or neither for an empty value)
       * </pre>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue getValue(int index);
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
       *
       * <pre>
       * one of these two (or neither for an empty value)
       * </pre>
       */
      int getValueCount();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
       *
       * <pre>
       * one of these two (or neither for an empty value)
       * </pre>
       */
      java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValueOrBuilder> 
          getValueOrBuilderList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
       *
       * <pre>
       * one of these two (or neither for an empty value)
       * </pre>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValueOrBuilder getValueOrBuilder(
          int index);

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
       */
      java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> 
          getChildEntryList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getChildEntry(int index);
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
       */
      int getChildEntryCount();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
       */
      java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
          getChildEntryOrBuilderList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder getChildEntryOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace.DetailEntry}
     */
    public  static final class DetailEntry extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace.DetailEntry)
        DetailEntryOrBuilder {
      // Use DetailEntry.newBuilder() to construct.
      private DetailEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private DetailEntry() {
        name_ = "";
        value_ = java.util.Collections.emptyList();
        childEntry_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private DetailEntry(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  value_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue>();
                  mutable_bitField0_ |= 0x00000002;
                }
                value_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.parser(), extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  childEntry_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry>();
                  mutable_bitField0_ |= 0x00000004;
                }
                childEntry_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            childEntry_ = java.util.Collections.unmodifiableList(childEntry_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_DetailEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_DetailEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue> value_;
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
       *
       * <pre>
       * one of these two (or neither for an empty value)
       * </pre>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue> getValueList() {
        return value_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
       *
       * <pre>
       * one of these two (or neither for an empty value)
       * </pre>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValueOrBuilder> 
          getValueOrBuilderList() {
        return value_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
       *
       * <pre>
       * one of these two (or neither for an empty value)
       * </pre>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
       *
       * <pre>
       * one of these two (or neither for an empty value)
       * </pre>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
       *
       * <pre>
       * one of these two (or neither for an empty value)
       * </pre>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValueOrBuilder getValueOrBuilder(
          int index) {
        return value_.get(index);
      }

      public static final int CHILD_ENTRY_FIELD_NUMBER = 3;
      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> childEntry_;
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> getChildEntryList() {
        return childEntry_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
          getChildEntryOrBuilderList() {
        return childEntry_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
       */
      public int getChildEntryCount() {
        return childEntry_.size();
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getChildEntry(int index) {
        return childEntry_.get(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder getChildEntryOrBuilder(
          int index) {
        return childEntry_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
        }
        for (int i = 0; i < value_.size(); i++) {
          output.writeMessage(2, value_.get(i));
        }
        for (int i = 0; i < childEntry_.size(); i++) {
          output.writeMessage(3, childEntry_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
        }
        for (int i = 0; i < value_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, value_.get(i));
        }
        for (int i = 0; i < childEntry_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, childEntry_.get(i));
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org_glowroot_collector_spi.Trace.DetailEntry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace.DetailEntry)
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_DetailEntry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_DetailEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder.class);
        }

        // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.DetailEntry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getValueFieldBuilder();
            getChildEntryFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          name_ = "";

          if (valueBuilder_ == null) {
            value_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            valueBuilder_.clear();
          }
          if (childEntryBuilder_ == null) {
            childEntry_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            childEntryBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_DetailEntry_descriptor;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getDefaultInstanceForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance();
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry build() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry buildPartial() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.name_ = name_;
          if (valueBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              value_ = java.util.Collections.unmodifiableList(value_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          if (childEntryBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              childEntry_ = java.util.Collections.unmodifiableList(childEntry_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.childEntry_ = childEntry_;
          } else {
            result.childEntry_ = childEntryBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry) {
            return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry other) {
          if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (valueBuilder_ == null) {
            if (!other.value_.isEmpty()) {
              if (value_.isEmpty()) {
                value_ = other.value_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureValueIsMutable();
                value_.addAll(other.value_);
              }
              onChanged();
            }
          } else {
            if (!other.value_.isEmpty()) {
              if (valueBuilder_.isEmpty()) {
                valueBuilder_.dispose();
                valueBuilder_ = null;
                value_ = other.value_;
                bitField0_ = (bitField0_ & ~0x00000002);
                valueBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getValueFieldBuilder() : null;
              } else {
                valueBuilder_.addAllMessages(other.value_);
              }
            }
          }
          if (childEntryBuilder_ == null) {
            if (!other.childEntry_.isEmpty()) {
              if (childEntry_.isEmpty()) {
                childEntry_ = other.childEntry_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureChildEntryIsMutable();
                childEntry_.addAll(other.childEntry_);
              }
              onChanged();
            }
          } else {
            if (!other.childEntry_.isEmpty()) {
              if (childEntryBuilder_.isEmpty()) {
                childEntryBuilder_.dispose();
                childEntryBuilder_ = null;
                childEntry_ = other.childEntry_;
                bitField0_ = (bitField0_ & ~0x00000004);
                childEntryBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getChildEntryFieldBuilder() : null;
              } else {
                childEntryBuilder_.addAllMessages(other.childEntry_);
              }
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue> value_ =
          java.util.Collections.emptyList();
        private void ensureValueIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue>(value_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValueOrBuilder> valueBuilder_;

        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue> getValueList() {
          if (valueBuilder_ == null) {
            return java.util.Collections.unmodifiableList(value_);
          } else {
            return valueBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public int getValueCount() {
          if (valueBuilder_ == null) {
            return value_.size();
          } else {
            return valueBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue getValue(int index) {
          if (valueBuilder_ == null) {
            return value_.get(index);
          } else {
            return valueBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public Builder setValue(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValueIsMutable();
            value_.set(index, value);
            onChanged();
          } else {
            valueBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public Builder setValue(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            ensureValueIsMutable();
            value_.set(index, builderForValue.build());
            onChanged();
          } else {
            valueBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public Builder addValue(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValueIsMutable();
            value_.add(value);
            onChanged();
          } else {
            valueBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public Builder addValue(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValueIsMutable();
            value_.add(index, value);
            onChanged();
          } else {
            valueBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public Builder addValue(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            ensureValueIsMutable();
            value_.add(builderForValue.build());
            onChanged();
          } else {
            valueBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public Builder addValue(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            ensureValueIsMutable();
            value_.add(index, builderForValue.build());
            onChanged();
          } else {
            valueBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public Builder addAllValue(
            java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue> values) {
          if (valueBuilder_ == null) {
            ensureValueIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, value_);
            onChanged();
          } else {
            valueBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            valueBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public Builder removeValue(int index) {
          if (valueBuilder_ == null) {
            ensureValueIsMutable();
            value_.remove(index);
            onChanged();
          } else {
            valueBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder getValueBuilder(
            int index) {
          return getValueFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValueOrBuilder getValueOrBuilder(
            int index) {
          if (valueBuilder_ == null) {
            return value_.get(index);  } else {
            return valueBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValueOrBuilder> 
             getValueOrBuilderList() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(value_);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder addValueBuilder() {
          return getValueFieldBuilder().addBuilder(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder addValueBuilder(
            int index) {
          return getValueFieldBuilder().addBuilder(
              index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailValue value = 2;</code>
         *
         * <pre>
         * one of these two (or neither for an empty value)
         * </pre>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder> 
             getValueBuilderList() {
          return getValueFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValueOrBuilder>(
                    value_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> childEntry_ =
          java.util.Collections.emptyList();
        private void ensureChildEntryIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            childEntry_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry>(childEntry_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> childEntryBuilder_;

        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> getChildEntryList() {
          if (childEntryBuilder_ == null) {
            return java.util.Collections.unmodifiableList(childEntry_);
          } else {
            return childEntryBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public int getChildEntryCount() {
          if (childEntryBuilder_ == null) {
            return childEntry_.size();
          } else {
            return childEntryBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getChildEntry(int index) {
          if (childEntryBuilder_ == null) {
            return childEntry_.get(index);
          } else {
            return childEntryBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public Builder setChildEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry value) {
          if (childEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildEntryIsMutable();
            childEntry_.set(index, value);
            onChanged();
          } else {
            childEntryBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public Builder setChildEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
          if (childEntryBuilder_ == null) {
            ensureChildEntryIsMutable();
            childEntry_.set(index, builderForValue.build());
            onChanged();
          } else {
            childEntryBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public Builder addChildEntry(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry value) {
          if (childEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildEntryIsMutable();
            childEntry_.add(value);
            onChanged();
          } else {
            childEntryBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public Builder addChildEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry value) {
          if (childEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildEntryIsMutable();
            childEntry_.add(index, value);
            onChanged();
          } else {
            childEntryBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public Builder addChildEntry(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
          if (childEntryBuilder_ == null) {
            ensureChildEntryIsMutable();
            childEntry_.add(builderForValue.build());
            onChanged();
          } else {
            childEntryBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public Builder addChildEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
          if (childEntryBuilder_ == null) {
            ensureChildEntryIsMutable();
            childEntry_.add(index, builderForValue.build());
            onChanged();
          } else {
            childEntryBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public Builder addAllChildEntry(
            java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> values) {
          if (childEntryBuilder_ == null) {
            ensureChildEntryIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, childEntry_);
            onChanged();
          } else {
            childEntryBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public Builder clearChildEntry() {
          if (childEntryBuilder_ == null) {
            childEntry_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            childEntryBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public Builder removeChildEntry(int index) {
          if (childEntryBuilder_ == null) {
            ensureChildEntryIsMutable();
            childEntry_.remove(index);
            onChanged();
          } else {
            childEntryBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder getChildEntryBuilder(
            int index) {
          return getChildEntryFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder getChildEntryOrBuilder(
            int index) {
          if (childEntryBuilder_ == null) {
            return childEntry_.get(index);  } else {
            return childEntryBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
             getChildEntryOrBuilderList() {
          if (childEntryBuilder_ != null) {
            return childEntryBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(childEntry_);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder addChildEntryBuilder() {
          return getChildEntryFieldBuilder().addBuilder(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder addChildEntryBuilder(
            int index) {
          return getChildEntryFieldBuilder().addBuilder(
              index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry child_entry = 3;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder> 
             getChildEntryBuilderList() {
          return getChildEntryFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
            getChildEntryFieldBuilder() {
          if (childEntryBuilder_ == null) {
            childEntryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder>(
                    childEntry_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            childEntry_ = null;
          }
          return childEntryBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace.DetailEntry)
      }

      // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace.DetailEntry)
      private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry();
      }

      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<DetailEntry>
          PARSER = new com.google.protobuf.AbstractParser<DetailEntry>() {
        public DetailEntry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new DetailEntry(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<DetailEntry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DetailEntry> getParserForType() {
        return PARSER;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DetailValueOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace.DetailValue)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string sval = 1;</code>
       */
      java.lang.String getSval();
      /**
       * <code>optional string sval = 1;</code>
       */
      com.google.protobuf.ByteString
          getSvalBytes();

      /**
       * <code>optional double dval = 2;</code>
       */
      double getDval();

      /**
       * <code>optional int64 lval = 3;</code>
       */
      long getLval();

      /**
       * <code>optional bool bval = 4;</code>
       */
      boolean getBval();

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.ValCase getValCase();
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace.DetailValue}
     */
    public  static final class DetailValue extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace.DetailValue)
        DetailValueOrBuilder {
      // Use DetailValue.newBuilder() to construct.
      private DetailValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private DetailValue() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private DetailValue(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();
                valCase_ = 1;
                val_ = s;
                break;
              }
              case 17: {
                valCase_ = 2;
                val_ = input.readDouble();
                break;
              }
              case 24: {
                valCase_ = 3;
                val_ = input.readInt64();
                break;
              }
              case 32: {
                valCase_ = 4;
                val_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_DetailValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_DetailValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder.class);
      }

      private int valCase_ = 0;
      private java.lang.Object val_;
      public enum ValCase
          implements com.google.protobuf.Internal.EnumLite {
        SVAL(1),
        DVAL(2),
        LVAL(3),
        BVAL(4),
        VAL_NOT_SET(0);
        private int value = 0;
        private ValCase(int value) {
          this.value = value;
        }
        public static ValCase valueOf(int value) {
          switch (value) {
            case 1: return SVAL;
            case 2: return DVAL;
            case 3: return LVAL;
            case 4: return BVAL;
            case 0: return VAL_NOT_SET;
            default: throw new java.lang.IllegalArgumentException(
              "Value is undefined for this oneof enum.");
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public ValCase
      getValCase() {
        return ValCase.valueOf(
            valCase_);
      }

      public static final int SVAL_FIELD_NUMBER = 1;
      /**
       * <code>optional string sval = 1;</code>
       */
      public java.lang.String getSval() {
        java.lang.Object ref = "";
        if (valCase_ == 1) {
          ref = val_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (valCase_ == 1) {
            val_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string sval = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSvalBytes() {
        java.lang.Object ref = "";
        if (valCase_ == 1) {
          ref = val_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valCase_ == 1) {
            val_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DVAL_FIELD_NUMBER = 2;
      /**
       * <code>optional double dval = 2;</code>
       */
      public double getDval() {
        if (valCase_ == 2) {
          return (java.lang.Double) val_;
        }
        return 0D;
      }

      public static final int LVAL_FIELD_NUMBER = 3;
      /**
       * <code>optional int64 lval = 3;</code>
       */
      public long getLval() {
        if (valCase_ == 3) {
          return (java.lang.Long) val_;
        }
        return 0L;
      }

      public static final int BVAL_FIELD_NUMBER = 4;
      /**
       * <code>optional bool bval = 4;</code>
       */
      public boolean getBval() {
        if (valCase_ == 4) {
          return (java.lang.Boolean) val_;
        }
        return false;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (valCase_ == 1) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, val_);
        }
        if (valCase_ == 2) {
          output.writeDouble(
              2, (double)((java.lang.Double) val_));
        }
        if (valCase_ == 3) {
          output.writeInt64(
              3, (long)((java.lang.Long) val_));
        }
        if (valCase_ == 4) {
          output.writeBool(
              4, (boolean)((java.lang.Boolean) val_));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (valCase_ == 1) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, val_);
        }
        if (valCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(
                2, (double)((java.lang.Double) val_));
        }
        if (valCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(
                3, (long)((java.lang.Long) val_));
        }
        if (valCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(
                4, (boolean)((java.lang.Boolean) val_));
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org_glowroot_collector_spi.Trace.DetailValue}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace.DetailValue)
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_DetailValue_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_DetailValue_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.Builder.class);
        }

        // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.DetailValue.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          valCase_ = 0;
          val_ = null;
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_DetailValue_descriptor;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue getDefaultInstanceForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.getDefaultInstance();
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue build() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue buildPartial() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue(this);
          if (valCase_ == 1) {
            result.val_ = val_;
          }
          if (valCase_ == 2) {
            result.val_ = val_;
          }
          if (valCase_ == 3) {
            result.val_ = val_;
          }
          if (valCase_ == 4) {
            result.val_ = val_;
          }
          result.valCase_ = valCase_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue) {
            return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue other) {
          if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue.getDefaultInstance()) return this;
          switch (other.getValCase()) {
            case SVAL: {
              valCase_ = 1;
              val_ = other.val_;
              onChanged();
              break;
            }
            case DVAL: {
              setDval(other.getDval());
              break;
            }
            case LVAL: {
              setLval(other.getLval());
              break;
            }
            case BVAL: {
              setBval(other.getBval());
              break;
            }
            case VAL_NOT_SET: {
              break;
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int valCase_ = 0;
        private java.lang.Object val_;
        public ValCase
            getValCase() {
          return ValCase.valueOf(
              valCase_);
        }

        public Builder clearVal() {
          valCase_ = 0;
          val_ = null;
          onChanged();
          return this;
        }


        /**
         * <code>optional string sval = 1;</code>
         */
        public java.lang.String getSval() {
          java.lang.Object ref = "";
          if (valCase_ == 1) {
            ref = val_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (valCase_ == 1) {
              val_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string sval = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSvalBytes() {
          java.lang.Object ref = "";
          if (valCase_ == 1) {
            ref = val_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (valCase_ == 1) {
              val_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string sval = 1;</code>
         */
        public Builder setSval(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  valCase_ = 1;
          val_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string sval = 1;</code>
         */
        public Builder clearSval() {
          if (valCase_ == 1) {
            valCase_ = 0;
            val_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional string sval = 1;</code>
         */
        public Builder setSvalBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          valCase_ = 1;
          val_ = value;
          onChanged();
          return this;
        }

        /**
         * <code>optional double dval = 2;</code>
         */
        public double getDval() {
          if (valCase_ == 2) {
            return (java.lang.Double) val_;
          }
          return 0D;
        }
        /**
         * <code>optional double dval = 2;</code>
         */
        public Builder setDval(double value) {
          valCase_ = 2;
          val_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double dval = 2;</code>
         */
        public Builder clearDval() {
          if (valCase_ == 2) {
            valCase_ = 0;
            val_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>optional int64 lval = 3;</code>
         */
        public long getLval() {
          if (valCase_ == 3) {
            return (java.lang.Long) val_;
          }
          return 0L;
        }
        /**
         * <code>optional int64 lval = 3;</code>
         */
        public Builder setLval(long value) {
          valCase_ = 3;
          val_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 lval = 3;</code>
         */
        public Builder clearLval() {
          if (valCase_ == 3) {
            valCase_ = 0;
            val_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>optional bool bval = 4;</code>
         */
        public boolean getBval() {
          if (valCase_ == 4) {
            return (java.lang.Boolean) val_;
          }
          return false;
        }
        /**
         * <code>optional bool bval = 4;</code>
         */
        public Builder setBval(boolean value) {
          valCase_ = 4;
          val_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool bval = 4;</code>
         */
        public Builder clearBval() {
          if (valCase_ == 4) {
            valCase_ = 0;
            val_ = null;
            onChanged();
          }
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace.DetailValue)
      }

      // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace.DetailValue)
      private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue();
      }

      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<DetailValue>
          PARSER = new com.google.protobuf.AbstractParser<DetailValue>() {
        public DetailValue parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new DetailValue(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<DetailValue> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DetailValue> getParserForType() {
        return PARSER;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailValue getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ErrorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace.Error)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string message = 1;</code>
       */
      java.lang.String getMessage();
      /**
       * <code>optional string message = 1;</code>
       */
      com.google.protobuf.ByteString
          getMessageBytes();

      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
       */
      boolean hasException();
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable getException();
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder getExceptionOrBuilder();
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace.Error}
     */
    public  static final class Error extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace.Error)
        ErrorOrBuilder {
      // Use Error.newBuilder() to construct.
      private Error(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Error() {
        message_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Error(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                message_ = s;
                break;
              }
              case 18: {
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder subBuilder = null;
                if (exception_ != null) {
                  subBuilder = exception_.toBuilder();
                }
                exception_ = input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(exception_);
                  exception_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Error_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Error_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder.class);
      }

      public static final int MESSAGE_FIELD_NUMBER = 1;
      private volatile java.lang.Object message_;
      /**
       * <code>optional string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EXCEPTION_FIELD_NUMBER = 2;
      private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable exception_;
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
       */
      public boolean hasException() {
        return exception_ != null;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable getException() {
        return exception_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.getDefaultInstance() : exception_;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder getExceptionOrBuilder() {
        return getException();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getMessageBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, message_);
        }
        if (exception_ != null) {
          output.writeMessage(2, getException());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getMessageBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, message_);
        }
        if (exception_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getException());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org_glowroot_collector_spi.Trace.Error}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace.Error)
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Error_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Error_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder.class);
        }

        // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.Error.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          message_ = "";

          if (exceptionBuilder_ == null) {
            exception_ = null;
          } else {
            exception_ = null;
            exceptionBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Error_descriptor;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error getDefaultInstanceForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.getDefaultInstance();
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error build() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error buildPartial() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error(this);
          result.message_ = message_;
          if (exceptionBuilder_ == null) {
            result.exception_ = exception_;
          } else {
            result.exception_ = exceptionBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error) {
            return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error other) {
          if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.getDefaultInstance()) return this;
          if (!other.getMessage().isEmpty()) {
            message_ = other.message_;
            onChanged();
          }
          if (other.hasException()) {
            mergeException(other.getException());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object message_ = "";
        /**
         * <code>optional string message = 1;</code>
         */
        public java.lang.String getMessage() {
          java.lang.Object ref = message_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            message_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string message = 1;</code>
         */
        public com.google.protobuf.ByteString
            getMessageBytes() {
          java.lang.Object ref = message_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            message_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string message = 1;</code>
         */
        public Builder setMessage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          message_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 1;</code>
         */
        public Builder clearMessage() {
          
          message_ = getDefaultInstance().getMessage();
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 1;</code>
         */
        public Builder setMessageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          message_ = value;
          onChanged();
          return this;
        }

        private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable exception_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder> exceptionBuilder_;
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
         */
        public boolean hasException() {
          return exceptionBuilder_ != null || exception_ != null;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable getException() {
          if (exceptionBuilder_ == null) {
            return exception_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.getDefaultInstance() : exception_;
          } else {
            return exceptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
         */
        public Builder setException(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable value) {
          if (exceptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            exception_ = value;
            onChanged();
          } else {
            exceptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
         */
        public Builder setException(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder builderForValue) {
          if (exceptionBuilder_ == null) {
            exception_ = builderForValue.build();
            onChanged();
          } else {
            exceptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
         */
        public Builder mergeException(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable value) {
          if (exceptionBuilder_ == null) {
            if (exception_ != null) {
              exception_ =
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.newBuilder(exception_).mergeFrom(value).buildPartial();
            } else {
              exception_ = value;
            }
            onChanged();
          } else {
            exceptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
         */
        public Builder clearException() {
          if (exceptionBuilder_ == null) {
            exception_ = null;
            onChanged();
          } else {
            exception_ = null;
            exceptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder getExceptionBuilder() {
          
          onChanged();
          return getExceptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder getExceptionOrBuilder() {
          if (exceptionBuilder_ != null) {
            return exceptionBuilder_.getMessageOrBuilder();
          } else {
            return exception_ == null ?
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.getDefaultInstance() : exception_;
          }
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable exception = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder> 
            getExceptionFieldBuilder() {
          if (exceptionBuilder_ == null) {
            exceptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder>(
                    getException(),
                    getParentForChildren(),
                    isClean());
            exception_ = null;
          }
          return exceptionBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace.Error)
      }

      // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace.Error)
      private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error();
      }

      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Error>
          PARSER = new com.google.protobuf.AbstractParser<Error>() {
        public Error parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Error(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Error> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Error> getParserForType() {
        return PARSER;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ThrowableOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace.Throwable)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string display = 1;</code>
       *
       * <pre>
       * display is java.lang.Throwable.toString() instead of java.lang.Throwable.getMessage()
       * so it includes the exception class name
       * </pre>
       */
      java.lang.String getDisplay();
      /**
       * <code>optional string display = 1;</code>
       *
       * <pre>
       * display is java.lang.Throwable.toString() instead of java.lang.Throwable.getMessage()
       * so it includes the exception class name
       * </pre>
       */
      com.google.protobuf.ByteString
          getDisplayBytes();

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
       *
       * <pre>
       * for inner cause throwable, stackTrace only includes frames not in common with caused
       * </pre>
       */
      java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> 
          getElementList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
       *
       * <pre>
       * for inner cause throwable, stackTrace only includes frames not in common with caused
       * </pre>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement getElement(int index);
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
       *
       * <pre>
       * for inner cause throwable, stackTrace only includes frames not in common with caused
       * </pre>
       */
      int getElementCount();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
       *
       * <pre>
       * for inner cause throwable, stackTrace only includes frames not in common with caused
       * </pre>
       */
      java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder> 
          getElementOrBuilderList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
       *
       * <pre>
       * for inner cause throwable, stackTrace only includes frames not in common with caused
       * </pre>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder getElementOrBuilder(
          int index);

      /**
       * <code>optional int32 frames_in_common_with_cause = 3;</code>
       *
       * <pre>
       * this is for printing '... 18 more' at end of cause instead of entire stack trace
       * </pre>
       */
      int getFramesInCommonWithCause();

      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
       */
      boolean hasCause();
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable getCause();
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder getCauseOrBuilder();
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace.Throwable}
     */
    public  static final class Throwable extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace.Throwable)
        ThrowableOrBuilder {
      // Use Throwable.newBuilder() to construct.
      private Throwable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Throwable() {
        display_ = "";
        element_ = java.util.Collections.emptyList();
        framesInCommonWithCause_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Throwable(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                display_ = s;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  element_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement>();
                  mutable_bitField0_ |= 0x00000002;
                }
                element_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.parser(), extensionRegistry));
                break;
              }
              case 24: {

                framesInCommonWithCause_ = input.readInt32();
                break;
              }
              case 34: {
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder subBuilder = null;
                if (cause_ != null) {
                  subBuilder = cause_.toBuilder();
                }
                cause_ = input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(cause_);
                  cause_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            element_ = java.util.Collections.unmodifiableList(element_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Throwable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Throwable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder.class);
      }

      private int bitField0_;
      public static final int DISPLAY_FIELD_NUMBER = 1;
      private volatile java.lang.Object display_;
      /**
       * <code>optional string display = 1;</code>
       *
       * <pre>
       * display is java.lang.Throwable.toString() instead of java.lang.Throwable.getMessage()
       * so it includes the exception class name
       * </pre>
       */
      public java.lang.String getDisplay() {
        java.lang.Object ref = display_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          display_ = s;
          return s;
        }
      }
      /**
       * <code>optional string display = 1;</code>
       *
       * <pre>
       * display is java.lang.Throwable.toString() instead of java.lang.Throwable.getMessage()
       * so it includes the exception class name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDisplayBytes() {
        java.lang.Object ref = display_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          display_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ELEMENT_FIELD_NUMBER = 2;
      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> element_;
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
       *
       * <pre>
       * for inner cause throwable, stackTrace only includes frames not in common with caused
       * </pre>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> getElementList() {
        return element_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
       *
       * <pre>
       * for inner cause throwable, stackTrace only includes frames not in common with caused
       * </pre>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder> 
          getElementOrBuilderList() {
        return element_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
       *
       * <pre>
       * for inner cause throwable, stackTrace only includes frames not in common with caused
       * </pre>
       */
      public int getElementCount() {
        return element_.size();
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
       *
       * <pre>
       * for inner cause throwable, stackTrace only includes frames not in common with caused
       * </pre>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement getElement(int index) {
        return element_.get(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
       *
       * <pre>
       * for inner cause throwable, stackTrace only includes frames not in common with caused
       * </pre>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder getElementOrBuilder(
          int index) {
        return element_.get(index);
      }

      public static final int FRAMES_IN_COMMON_WITH_CAUSE_FIELD_NUMBER = 3;
      private int framesInCommonWithCause_;
      /**
       * <code>optional int32 frames_in_common_with_cause = 3;</code>
       *
       * <pre>
       * this is for printing '... 18 more' at end of cause instead of entire stack trace
       * </pre>
       */
      public int getFramesInCommonWithCause() {
        return framesInCommonWithCause_;
      }

      public static final int CAUSE_FIELD_NUMBER = 4;
      private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable cause_;
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
       */
      public boolean hasCause() {
        return cause_ != null;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable getCause() {
        return cause_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.getDefaultInstance() : cause_;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder getCauseOrBuilder() {
        return getCause();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getDisplayBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, display_);
        }
        for (int i = 0; i < element_.size(); i++) {
          output.writeMessage(2, element_.get(i));
        }
        if (framesInCommonWithCause_ != 0) {
          output.writeInt32(3, framesInCommonWithCause_);
        }
        if (cause_ != null) {
          output.writeMessage(4, getCause());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getDisplayBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, display_);
        }
        for (int i = 0; i < element_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, element_.get(i));
        }
        if (framesInCommonWithCause_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, framesInCommonWithCause_);
        }
        if (cause_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getCause());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org_glowroot_collector_spi.Trace.Throwable}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace.Throwable)
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Throwable_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Throwable_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder.class);
        }

        // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.Throwable.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getElementFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          display_ = "";

          if (elementBuilder_ == null) {
            element_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            elementBuilder_.clear();
          }
          framesInCommonWithCause_ = 0;

          if (causeBuilder_ == null) {
            cause_ = null;
          } else {
            cause_ = null;
            causeBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Throwable_descriptor;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable getDefaultInstanceForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.getDefaultInstance();
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable build() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable buildPartial() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.display_ = display_;
          if (elementBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              element_ = java.util.Collections.unmodifiableList(element_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.element_ = element_;
          } else {
            result.element_ = elementBuilder_.build();
          }
          result.framesInCommonWithCause_ = framesInCommonWithCause_;
          if (causeBuilder_ == null) {
            result.cause_ = cause_;
          } else {
            result.cause_ = causeBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable) {
            return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable other) {
          if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.getDefaultInstance()) return this;
          if (!other.getDisplay().isEmpty()) {
            display_ = other.display_;
            onChanged();
          }
          if (elementBuilder_ == null) {
            if (!other.element_.isEmpty()) {
              if (element_.isEmpty()) {
                element_ = other.element_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureElementIsMutable();
                element_.addAll(other.element_);
              }
              onChanged();
            }
          } else {
            if (!other.element_.isEmpty()) {
              if (elementBuilder_.isEmpty()) {
                elementBuilder_.dispose();
                elementBuilder_ = null;
                element_ = other.element_;
                bitField0_ = (bitField0_ & ~0x00000002);
                elementBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getElementFieldBuilder() : null;
              } else {
                elementBuilder_.addAllMessages(other.element_);
              }
            }
          }
          if (other.getFramesInCommonWithCause() != 0) {
            setFramesInCommonWithCause(other.getFramesInCommonWithCause());
          }
          if (other.hasCause()) {
            mergeCause(other.getCause());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object display_ = "";
        /**
         * <code>optional string display = 1;</code>
         *
         * <pre>
         * display is java.lang.Throwable.toString() instead of java.lang.Throwable.getMessage()
         * so it includes the exception class name
         * </pre>
         */
        public java.lang.String getDisplay() {
          java.lang.Object ref = display_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            display_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string display = 1;</code>
         *
         * <pre>
         * display is java.lang.Throwable.toString() instead of java.lang.Throwable.getMessage()
         * so it includes the exception class name
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDisplayBytes() {
          java.lang.Object ref = display_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            display_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string display = 1;</code>
         *
         * <pre>
         * display is java.lang.Throwable.toString() instead of java.lang.Throwable.getMessage()
         * so it includes the exception class name
         * </pre>
         */
        public Builder setDisplay(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          display_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string display = 1;</code>
         *
         * <pre>
         * display is java.lang.Throwable.toString() instead of java.lang.Throwable.getMessage()
         * so it includes the exception class name
         * </pre>
         */
        public Builder clearDisplay() {
          
          display_ = getDefaultInstance().getDisplay();
          onChanged();
          return this;
        }
        /**
         * <code>optional string display = 1;</code>
         *
         * <pre>
         * display is java.lang.Throwable.toString() instead of java.lang.Throwable.getMessage()
         * so it includes the exception class name
         * </pre>
         */
        public Builder setDisplayBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          display_ = value;
          onChanged();
          return this;
        }

        private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> element_ =
          java.util.Collections.emptyList();
        private void ensureElementIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            element_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement>(element_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder> elementBuilder_;

        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> getElementList() {
          if (elementBuilder_ == null) {
            return java.util.Collections.unmodifiableList(element_);
          } else {
            return elementBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public int getElementCount() {
          if (elementBuilder_ == null) {
            return element_.size();
          } else {
            return elementBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement getElement(int index) {
          if (elementBuilder_ == null) {
            return element_.get(index);
          } else {
            return elementBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public Builder setElement(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement value) {
          if (elementBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureElementIsMutable();
            element_.set(index, value);
            onChanged();
          } else {
            elementBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public Builder setElement(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder builderForValue) {
          if (elementBuilder_ == null) {
            ensureElementIsMutable();
            element_.set(index, builderForValue.build());
            onChanged();
          } else {
            elementBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public Builder addElement(org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement value) {
          if (elementBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureElementIsMutable();
            element_.add(value);
            onChanged();
          } else {
            elementBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public Builder addElement(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement value) {
          if (elementBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureElementIsMutable();
            element_.add(index, value);
            onChanged();
          } else {
            elementBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public Builder addElement(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder builderForValue) {
          if (elementBuilder_ == null) {
            ensureElementIsMutable();
            element_.add(builderForValue.build());
            onChanged();
          } else {
            elementBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public Builder addElement(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder builderForValue) {
          if (elementBuilder_ == null) {
            ensureElementIsMutable();
            element_.add(index, builderForValue.build());
            onChanged();
          } else {
            elementBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public Builder addAllElement(
            java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> values) {
          if (elementBuilder_ == null) {
            ensureElementIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, element_);
            onChanged();
          } else {
            elementBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public Builder clearElement() {
          if (elementBuilder_ == null) {
            element_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            elementBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public Builder removeElement(int index) {
          if (elementBuilder_ == null) {
            ensureElementIsMutable();
            element_.remove(index);
            onChanged();
          } else {
            elementBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder getElementBuilder(
            int index) {
          return getElementFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder getElementOrBuilder(
            int index) {
          if (elementBuilder_ == null) {
            return element_.get(index);  } else {
            return elementBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder> 
             getElementOrBuilderList() {
          if (elementBuilder_ != null) {
            return elementBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(element_);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder addElementBuilder() {
          return getElementFieldBuilder().addBuilder(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder addElementBuilder(
            int index) {
          return getElementFieldBuilder().addBuilder(
              index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement element = 2;</code>
         *
         * <pre>
         * for inner cause throwable, stackTrace only includes frames not in common with caused
         * </pre>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder> 
             getElementBuilderList() {
          return getElementFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder> 
            getElementFieldBuilder() {
          if (elementBuilder_ == null) {
            elementBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder>(
                    element_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            element_ = null;
          }
          return elementBuilder_;
        }

        private int framesInCommonWithCause_ ;
        /**
         * <code>optional int32 frames_in_common_with_cause = 3;</code>
         *
         * <pre>
         * this is for printing '... 18 more' at end of cause instead of entire stack trace
         * </pre>
         */
        public int getFramesInCommonWithCause() {
          return framesInCommonWithCause_;
        }
        /**
         * <code>optional int32 frames_in_common_with_cause = 3;</code>
         *
         * <pre>
         * this is for printing '... 18 more' at end of cause instead of entire stack trace
         * </pre>
         */
        public Builder setFramesInCommonWithCause(int value) {
          
          framesInCommonWithCause_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 frames_in_common_with_cause = 3;</code>
         *
         * <pre>
         * this is for printing '... 18 more' at end of cause instead of entire stack trace
         * </pre>
         */
        public Builder clearFramesInCommonWithCause() {
          
          framesInCommonWithCause_ = 0;
          onChanged();
          return this;
        }

        private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable cause_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder> causeBuilder_;
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
         */
        public boolean hasCause() {
          return causeBuilder_ != null || cause_ != null;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable getCause() {
          if (causeBuilder_ == null) {
            return cause_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.getDefaultInstance() : cause_;
          } else {
            return causeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
         */
        public Builder setCause(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable value) {
          if (causeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cause_ = value;
            onChanged();
          } else {
            causeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
         */
        public Builder setCause(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder builderForValue) {
          if (causeBuilder_ == null) {
            cause_ = builderForValue.build();
            onChanged();
          } else {
            causeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
         */
        public Builder mergeCause(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable value) {
          if (causeBuilder_ == null) {
            if (cause_ != null) {
              cause_ =
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.newBuilder(cause_).mergeFrom(value).buildPartial();
            } else {
              cause_ = value;
            }
            onChanged();
          } else {
            causeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
         */
        public Builder clearCause() {
          if (causeBuilder_ == null) {
            cause_ = null;
            onChanged();
          } else {
            cause_ = null;
            causeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder getCauseBuilder() {
          
          onChanged();
          return getCauseFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder getCauseOrBuilder() {
          if (causeBuilder_ != null) {
            return causeBuilder_.getMessageOrBuilder();
          } else {
            return cause_ == null ?
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.getDefaultInstance() : cause_;
          }
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Throwable cause = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder> 
            getCauseFieldBuilder() {
          if (causeBuilder_ == null) {
            causeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ThrowableOrBuilder>(
                    getCause(),
                    getParentForChildren(),
                    isClean());
            cause_ = null;
          }
          return causeBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace.Throwable)
      }

      // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace.Throwable)
      private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable();
      }

      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Throwable>
          PARSER = new com.google.protobuf.AbstractParser<Throwable>() {
        public Throwable parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Throwable(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Throwable> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Throwable> getParserForType() {
        return PARSER;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Throwable getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TimerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace.Timer)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional bool extended = 2;</code>
       */
      boolean getExtended();

      /**
       * <code>optional int64 total_nanos = 3;</code>
       */
      long getTotalNanos();

      /**
       * <code>optional int64 count = 4;</code>
       */
      long getCount();

      /**
       * <code>optional bool active = 5;</code>
       *
       * <pre>
       * whether timer was active at the time of a partial trace capture
       * </pre>
       */
      boolean getActive();

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
       */
      java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer> 
          getChildTimerList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer getChildTimer(int index);
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
       */
      int getChildTimerCount();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
       */
      java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder> 
          getChildTimerOrBuilderList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder getChildTimerOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace.Timer}
     */
    public  static final class Timer extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace.Timer)
        TimerOrBuilder {
      // Use Timer.newBuilder() to construct.
      private Timer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Timer() {
        name_ = "";
        extended_ = false;
        totalNanos_ = 0L;
        count_ = 0L;
        active_ = false;
        childTimer_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Timer(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 16: {

                extended_ = input.readBool();
                break;
              }
              case 24: {

                totalNanos_ = input.readInt64();
                break;
              }
              case 32: {

                count_ = input.readInt64();
                break;
              }
              case 40: {

                active_ = input.readBool();
                break;
              }
              case 50: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  childTimer_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                childTimer_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            childTimer_ = java.util.Collections.unmodifiableList(childTimer_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Timer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Timer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EXTENDED_FIELD_NUMBER = 2;
      private boolean extended_;
      /**
       * <code>optional bool extended = 2;</code>
       */
      public boolean getExtended() {
        return extended_;
      }

      public static final int TOTAL_NANOS_FIELD_NUMBER = 3;
      private long totalNanos_;
      /**
       * <code>optional int64 total_nanos = 3;</code>
       */
      public long getTotalNanos() {
        return totalNanos_;
      }

      public static final int COUNT_FIELD_NUMBER = 4;
      private long count_;
      /**
       * <code>optional int64 count = 4;</code>
       */
      public long getCount() {
        return count_;
      }

      public static final int ACTIVE_FIELD_NUMBER = 5;
      private boolean active_;
      /**
       * <code>optional bool active = 5;</code>
       *
       * <pre>
       * whether timer was active at the time of a partial trace capture
       * </pre>
       */
      public boolean getActive() {
        return active_;
      }

      public static final int CHILD_TIMER_FIELD_NUMBER = 6;
      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer> childTimer_;
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer> getChildTimerList() {
        return childTimer_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder> 
          getChildTimerOrBuilderList() {
        return childTimer_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
       */
      public int getChildTimerCount() {
        return childTimer_.size();
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer getChildTimer(int index) {
        return childTimer_.get(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder getChildTimerOrBuilder(
          int index) {
        return childTimer_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
        }
        if (extended_ != false) {
          output.writeBool(2, extended_);
        }
        if (totalNanos_ != 0L) {
          output.writeInt64(3, totalNanos_);
        }
        if (count_ != 0L) {
          output.writeInt64(4, count_);
        }
        if (active_ != false) {
          output.writeBool(5, active_);
        }
        for (int i = 0; i < childTimer_.size(); i++) {
          output.writeMessage(6, childTimer_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
        }
        if (extended_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, extended_);
        }
        if (totalNanos_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, totalNanos_);
        }
        if (count_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(4, count_);
        }
        if (active_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, active_);
        }
        for (int i = 0; i < childTimer_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, childTimer_.get(i));
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org_glowroot_collector_spi.Trace.Timer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace.Timer)
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Timer_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Timer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder.class);
        }

        // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.Timer.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getChildTimerFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          name_ = "";

          extended_ = false;

          totalNanos_ = 0L;

          count_ = 0L;

          active_ = false;

          if (childTimerBuilder_ == null) {
            childTimer_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            childTimerBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Timer_descriptor;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer getDefaultInstanceForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.getDefaultInstance();
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer build() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer buildPartial() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.name_ = name_;
          result.extended_ = extended_;
          result.totalNanos_ = totalNanos_;
          result.count_ = count_;
          result.active_ = active_;
          if (childTimerBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              childTimer_ = java.util.Collections.unmodifiableList(childTimer_);
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.childTimer_ = childTimer_;
          } else {
            result.childTimer_ = childTimerBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer) {
            return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer other) {
          if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (other.getExtended() != false) {
            setExtended(other.getExtended());
          }
          if (other.getTotalNanos() != 0L) {
            setTotalNanos(other.getTotalNanos());
          }
          if (other.getCount() != 0L) {
            setCount(other.getCount());
          }
          if (other.getActive() != false) {
            setActive(other.getActive());
          }
          if (childTimerBuilder_ == null) {
            if (!other.childTimer_.isEmpty()) {
              if (childTimer_.isEmpty()) {
                childTimer_ = other.childTimer_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureChildTimerIsMutable();
                childTimer_.addAll(other.childTimer_);
              }
              onChanged();
            }
          } else {
            if (!other.childTimer_.isEmpty()) {
              if (childTimerBuilder_.isEmpty()) {
                childTimerBuilder_.dispose();
                childTimerBuilder_ = null;
                childTimer_ = other.childTimer_;
                bitField0_ = (bitField0_ & ~0x00000020);
                childTimerBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getChildTimerFieldBuilder() : null;
              } else {
                childTimerBuilder_.addAllMessages(other.childTimer_);
              }
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private boolean extended_ ;
        /**
         * <code>optional bool extended = 2;</code>
         */
        public boolean getExtended() {
          return extended_;
        }
        /**
         * <code>optional bool extended = 2;</code>
         */
        public Builder setExtended(boolean value) {
          
          extended_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool extended = 2;</code>
         */
        public Builder clearExtended() {
          
          extended_ = false;
          onChanged();
          return this;
        }

        private long totalNanos_ ;
        /**
         * <code>optional int64 total_nanos = 3;</code>
         */
        public long getTotalNanos() {
          return totalNanos_;
        }
        /**
         * <code>optional int64 total_nanos = 3;</code>
         */
        public Builder setTotalNanos(long value) {
          
          totalNanos_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 total_nanos = 3;</code>
         */
        public Builder clearTotalNanos() {
          
          totalNanos_ = 0L;
          onChanged();
          return this;
        }

        private long count_ ;
        /**
         * <code>optional int64 count = 4;</code>
         */
        public long getCount() {
          return count_;
        }
        /**
         * <code>optional int64 count = 4;</code>
         */
        public Builder setCount(long value) {
          
          count_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 count = 4;</code>
         */
        public Builder clearCount() {
          
          count_ = 0L;
          onChanged();
          return this;
        }

        private boolean active_ ;
        /**
         * <code>optional bool active = 5;</code>
         *
         * <pre>
         * whether timer was active at the time of a partial trace capture
         * </pre>
         */
        public boolean getActive() {
          return active_;
        }
        /**
         * <code>optional bool active = 5;</code>
         *
         * <pre>
         * whether timer was active at the time of a partial trace capture
         * </pre>
         */
        public Builder setActive(boolean value) {
          
          active_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool active = 5;</code>
         *
         * <pre>
         * whether timer was active at the time of a partial trace capture
         * </pre>
         */
        public Builder clearActive() {
          
          active_ = false;
          onChanged();
          return this;
        }

        private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer> childTimer_ =
          java.util.Collections.emptyList();
        private void ensureChildTimerIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            childTimer_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer>(childTimer_);
            bitField0_ |= 0x00000020;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder> childTimerBuilder_;

        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer> getChildTimerList() {
          if (childTimerBuilder_ == null) {
            return java.util.Collections.unmodifiableList(childTimer_);
          } else {
            return childTimerBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public int getChildTimerCount() {
          if (childTimerBuilder_ == null) {
            return childTimer_.size();
          } else {
            return childTimerBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer getChildTimer(int index) {
          if (childTimerBuilder_ == null) {
            return childTimer_.get(index);
          } else {
            return childTimerBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public Builder setChildTimer(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer value) {
          if (childTimerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildTimerIsMutable();
            childTimer_.set(index, value);
            onChanged();
          } else {
            childTimerBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public Builder setChildTimer(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
          if (childTimerBuilder_ == null) {
            ensureChildTimerIsMutable();
            childTimer_.set(index, builderForValue.build());
            onChanged();
          } else {
            childTimerBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public Builder addChildTimer(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer value) {
          if (childTimerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildTimerIsMutable();
            childTimer_.add(value);
            onChanged();
          } else {
            childTimerBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public Builder addChildTimer(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer value) {
          if (childTimerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildTimerIsMutable();
            childTimer_.add(index, value);
            onChanged();
          } else {
            childTimerBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public Builder addChildTimer(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
          if (childTimerBuilder_ == null) {
            ensureChildTimerIsMutable();
            childTimer_.add(builderForValue.build());
            onChanged();
          } else {
            childTimerBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public Builder addChildTimer(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
          if (childTimerBuilder_ == null) {
            ensureChildTimerIsMutable();
            childTimer_.add(index, builderForValue.build());
            onChanged();
          } else {
            childTimerBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public Builder addAllChildTimer(
            java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer> values) {
          if (childTimerBuilder_ == null) {
            ensureChildTimerIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, childTimer_);
            onChanged();
          } else {
            childTimerBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public Builder clearChildTimer() {
          if (childTimerBuilder_ == null) {
            childTimer_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
          } else {
            childTimerBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public Builder removeChildTimer(int index) {
          if (childTimerBuilder_ == null) {
            ensureChildTimerIsMutable();
            childTimer_.remove(index);
            onChanged();
          } else {
            childTimerBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder getChildTimerBuilder(
            int index) {
          return getChildTimerFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder getChildTimerOrBuilder(
            int index) {
          if (childTimerBuilder_ == null) {
            return childTimer_.get(index);  } else {
            return childTimerBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder> 
             getChildTimerOrBuilderList() {
          if (childTimerBuilder_ != null) {
            return childTimerBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(childTimer_);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder addChildTimerBuilder() {
          return getChildTimerFieldBuilder().addBuilder(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder addChildTimerBuilder(
            int index) {
          return getChildTimerFieldBuilder().addBuilder(
              index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Timer child_timer = 6;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder> 
             getChildTimerBuilderList() {
          return getChildTimerFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder> 
            getChildTimerFieldBuilder() {
          if (childTimerBuilder_ == null) {
            childTimerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.TimerOrBuilder>(
                    childTimer_,
                    ((bitField0_ & 0x00000020) == 0x00000020),
                    getParentForChildren(),
                    isClean());
            childTimer_ = null;
          }
          return childTimerBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace.Timer)
      }

      // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace.Timer)
      private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer();
      }

      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Timer>
          PARSER = new com.google.protobuf.AbstractParser<Timer>() {
        public Timer parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Timer(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Timer> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Timer> getParserForType() {
        return PARSER;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Timer getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GarbageCollectionActivityOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace.GarbageCollectionActivity)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string collector_name = 1;</code>
       */
      java.lang.String getCollectorName();
      /**
       * <code>optional string collector_name = 1;</code>
       */
      com.google.protobuf.ByteString
          getCollectorNameBytes();

      /**
       * <code>optional int64 total_millis = 2;</code>
       */
      long getTotalMillis();

      /**
       * <code>optional int64 count = 3;</code>
       */
      long getCount();
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace.GarbageCollectionActivity}
     */
    public  static final class GarbageCollectionActivity extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace.GarbageCollectionActivity)
        GarbageCollectionActivityOrBuilder {
      // Use GarbageCollectionActivity.newBuilder() to construct.
      private GarbageCollectionActivity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private GarbageCollectionActivity() {
        collectorName_ = "";
        totalMillis_ = 0L;
        count_ = 0L;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private GarbageCollectionActivity(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                collectorName_ = s;
                break;
              }
              case 16: {

                totalMillis_ = input.readInt64();
                break;
              }
              case 24: {

                count_ = input.readInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_GarbageCollectionActivity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_GarbageCollectionActivity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder.class);
      }

      public static final int COLLECTOR_NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object collectorName_;
      /**
       * <code>optional string collector_name = 1;</code>
       */
      public java.lang.String getCollectorName() {
        java.lang.Object ref = collectorName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          collectorName_ = s;
          return s;
        }
      }
      /**
       * <code>optional string collector_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCollectorNameBytes() {
        java.lang.Object ref = collectorName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          collectorName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TOTAL_MILLIS_FIELD_NUMBER = 2;
      private long totalMillis_;
      /**
       * <code>optional int64 total_millis = 2;</code>
       */
      public long getTotalMillis() {
        return totalMillis_;
      }

      public static final int COUNT_FIELD_NUMBER = 3;
      private long count_;
      /**
       * <code>optional int64 count = 3;</code>
       */
      public long getCount() {
        return count_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getCollectorNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, collectorName_);
        }
        if (totalMillis_ != 0L) {
          output.writeInt64(2, totalMillis_);
        }
        if (count_ != 0L) {
          output.writeInt64(3, count_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getCollectorNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, collectorName_);
        }
        if (totalMillis_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, totalMillis_);
        }
        if (count_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, count_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org_glowroot_collector_spi.Trace.GarbageCollectionActivity}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace.GarbageCollectionActivity)
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivityOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_GarbageCollectionActivity_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_GarbageCollectionActivity_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.Builder.class);
        }

        // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.GarbageCollectionActivity.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          collectorName_ = "";

          totalMillis_ = 0L;

          count_ = 0L;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_GarbageCollectionActivity_descriptor;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity getDefaultInstanceForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.getDefaultInstance();
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity build() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity buildPartial() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity(this);
          result.collectorName_ = collectorName_;
          result.totalMillis_ = totalMillis_;
          result.count_ = count_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity) {
            return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity other) {
          if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity.getDefaultInstance()) return this;
          if (!other.getCollectorName().isEmpty()) {
            collectorName_ = other.collectorName_;
            onChanged();
          }
          if (other.getTotalMillis() != 0L) {
            setTotalMillis(other.getTotalMillis());
          }
          if (other.getCount() != 0L) {
            setCount(other.getCount());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object collectorName_ = "";
        /**
         * <code>optional string collector_name = 1;</code>
         */
        public java.lang.String getCollectorName() {
          java.lang.Object ref = collectorName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            collectorName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string collector_name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getCollectorNameBytes() {
          java.lang.Object ref = collectorName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            collectorName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string collector_name = 1;</code>
         */
        public Builder setCollectorName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          collectorName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string collector_name = 1;</code>
         */
        public Builder clearCollectorName() {
          
          collectorName_ = getDefaultInstance().getCollectorName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string collector_name = 1;</code>
         */
        public Builder setCollectorNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          collectorName_ = value;
          onChanged();
          return this;
        }

        private long totalMillis_ ;
        /**
         * <code>optional int64 total_millis = 2;</code>
         */
        public long getTotalMillis() {
          return totalMillis_;
        }
        /**
         * <code>optional int64 total_millis = 2;</code>
         */
        public Builder setTotalMillis(long value) {
          
          totalMillis_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 total_millis = 2;</code>
         */
        public Builder clearTotalMillis() {
          
          totalMillis_ = 0L;
          onChanged();
          return this;
        }

        private long count_ ;
        /**
         * <code>optional int64 count = 3;</code>
         */
        public long getCount() {
          return count_;
        }
        /**
         * <code>optional int64 count = 3;</code>
         */
        public Builder setCount(long value) {
          
          count_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 count = 3;</code>
         */
        public Builder clearCount() {
          
          count_ = 0L;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace.GarbageCollectionActivity)
      }

      // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace.GarbageCollectionActivity)
      private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity();
      }

      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<GarbageCollectionActivity>
          PARSER = new com.google.protobuf.AbstractParser<GarbageCollectionActivity>() {
        public GarbageCollectionActivity parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new GarbageCollectionActivity(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<GarbageCollectionActivity> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GarbageCollectionActivity> getParserForType() {
        return PARSER;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.GarbageCollectionActivity getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface EntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace.Entry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int64 start_offset_nanos = 1;</code>
       *
       * <pre>
       * start time relative to trace start
       * </pre>
       */
      long getStartOffsetNanos();

      /**
       * <code>optional int64 duration_nanos = 2;</code>
       */
      long getDurationNanos();

      /**
       * <code>optional bool active = 3;</code>
       *
       * <pre>
       * whether entry was active at the time of a partial trace capture
       * </pre>
       */
      boolean getActive();

      /**
       * <code>optional string message = 4;</code>
       *
       * <pre>
       * message is empty for trace entries added using addErrorEntry()
       * </pre>
       */
      java.lang.String getMessage();
      /**
       * <code>optional string message = 4;</code>
       *
       * <pre>
       * message is empty for trace entries added using addErrorEntry()
       * </pre>
       */
      com.google.protobuf.ByteString
          getMessageBytes();

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
       */
      java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> 
          getDetailEntryList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getDetailEntry(int index);
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
       */
      int getDetailEntryCount();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
       */
      java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
          getDetailEntryOrBuilderList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder getDetailEntryOrBuilder(
          int index);

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
       */
      java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> 
          getStackTraceElementList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement getStackTraceElement(int index);
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
       */
      int getStackTraceElementCount();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
       */
      java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder> 
          getStackTraceElementOrBuilderList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder getStackTraceElementOrBuilder(
          int index);

      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
       */
      boolean hasError();
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error getError();
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder getErrorOrBuilder();

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
       */
      java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> 
          getChildEntryList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry getChildEntry(int index);
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
       */
      int getChildEntryCount();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
       */
      java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder> 
          getChildEntryOrBuilderList();
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
       */
      org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder getChildEntryOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace.Entry}
     */
    public  static final class Entry extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace.Entry)
        EntryOrBuilder {
      // Use Entry.newBuilder() to construct.
      private Entry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Entry() {
        startOffsetNanos_ = 0L;
        durationNanos_ = 0L;
        active_ = false;
        message_ = "";
        detailEntry_ = java.util.Collections.emptyList();
        stackTraceElement_ = java.util.Collections.emptyList();
        childEntry_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Entry(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                startOffsetNanos_ = input.readInt64();
                break;
              }
              case 16: {

                durationNanos_ = input.readInt64();
                break;
              }
              case 24: {

                active_ = input.readBool();
                break;
              }
              case 34: {
                String s = input.readStringRequireUtf8();

                message_ = s;
                break;
              }
              case 42: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  detailEntry_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry>();
                  mutable_bitField0_ |= 0x00000010;
                }
                detailEntry_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.parser(), extensionRegistry));
                break;
              }
              case 50: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  stackTraceElement_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement>();
                  mutable_bitField0_ |= 0x00000020;
                }
                stackTraceElement_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.parser(), extensionRegistry));
                break;
              }
              case 58: {
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder subBuilder = null;
                if (error_ != null) {
                  subBuilder = error_.toBuilder();
                }
                error_ = input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(error_);
                  error_ = subBuilder.buildPartial();
                }

                break;
              }
              case 66: {
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                  childEntry_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry>();
                  mutable_bitField0_ |= 0x00000080;
                }
                childEntry_.add(input.readMessage(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            detailEntry_ = java.util.Collections.unmodifiableList(detailEntry_);
          }
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            stackTraceElement_ = java.util.Collections.unmodifiableList(stackTraceElement_);
          }
          if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
            childEntry_ = java.util.Collections.unmodifiableList(childEntry_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Entry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Entry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder.class);
      }

      private int bitField0_;
      public static final int START_OFFSET_NANOS_FIELD_NUMBER = 1;
      private long startOffsetNanos_;
      /**
       * <code>optional int64 start_offset_nanos = 1;</code>
       *
       * <pre>
       * start time relative to trace start
       * </pre>
       */
      public long getStartOffsetNanos() {
        return startOffsetNanos_;
      }

      public static final int DURATION_NANOS_FIELD_NUMBER = 2;
      private long durationNanos_;
      /**
       * <code>optional int64 duration_nanos = 2;</code>
       */
      public long getDurationNanos() {
        return durationNanos_;
      }

      public static final int ACTIVE_FIELD_NUMBER = 3;
      private boolean active_;
      /**
       * <code>optional bool active = 3;</code>
       *
       * <pre>
       * whether entry was active at the time of a partial trace capture
       * </pre>
       */
      public boolean getActive() {
        return active_;
      }

      public static final int MESSAGE_FIELD_NUMBER = 4;
      private volatile java.lang.Object message_;
      /**
       * <code>optional string message = 4;</code>
       *
       * <pre>
       * message is empty for trace entries added using addErrorEntry()
       * </pre>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        }
      }
      /**
       * <code>optional string message = 4;</code>
       *
       * <pre>
       * message is empty for trace entries added using addErrorEntry()
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DETAIL_ENTRY_FIELD_NUMBER = 5;
      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> detailEntry_;
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> getDetailEntryList() {
        return detailEntry_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
          getDetailEntryOrBuilderList() {
        return detailEntry_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
       */
      public int getDetailEntryCount() {
        return detailEntry_.size();
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getDetailEntry(int index) {
        return detailEntry_.get(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder getDetailEntryOrBuilder(
          int index) {
        return detailEntry_.get(index);
      }

      public static final int STACK_TRACE_ELEMENT_FIELD_NUMBER = 6;
      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> stackTraceElement_;
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> getStackTraceElementList() {
        return stackTraceElement_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder> 
          getStackTraceElementOrBuilderList() {
        return stackTraceElement_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
       */
      public int getStackTraceElementCount() {
        return stackTraceElement_.size();
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement getStackTraceElement(int index) {
        return stackTraceElement_.get(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder getStackTraceElementOrBuilder(
          int index) {
        return stackTraceElement_.get(index);
      }

      public static final int ERROR_FIELD_NUMBER = 7;
      private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error error_;
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
       */
      public boolean hasError() {
        return error_ != null;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error getError() {
        return error_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder getErrorOrBuilder() {
        return getError();
      }

      public static final int CHILD_ENTRY_FIELD_NUMBER = 8;
      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> childEntry_;
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> getChildEntryList() {
        return childEntry_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder> 
          getChildEntryOrBuilderList() {
        return childEntry_;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
       */
      public int getChildEntryCount() {
        return childEntry_.size();
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry getChildEntry(int index) {
        return childEntry_.get(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder getChildEntryOrBuilder(
          int index) {
        return childEntry_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (startOffsetNanos_ != 0L) {
          output.writeInt64(1, startOffsetNanos_);
        }
        if (durationNanos_ != 0L) {
          output.writeInt64(2, durationNanos_);
        }
        if (active_ != false) {
          output.writeBool(3, active_);
        }
        if (!getMessageBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 4, message_);
        }
        for (int i = 0; i < detailEntry_.size(); i++) {
          output.writeMessage(5, detailEntry_.get(i));
        }
        for (int i = 0; i < stackTraceElement_.size(); i++) {
          output.writeMessage(6, stackTraceElement_.get(i));
        }
        if (error_ != null) {
          output.writeMessage(7, getError());
        }
        for (int i = 0; i < childEntry_.size(); i++) {
          output.writeMessage(8, childEntry_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (startOffsetNanos_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, startOffsetNanos_);
        }
        if (durationNanos_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, durationNanos_);
        }
        if (active_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, active_);
        }
        if (!getMessageBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(4, message_);
        }
        for (int i = 0; i < detailEntry_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, detailEntry_.get(i));
        }
        for (int i = 0; i < stackTraceElement_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, stackTraceElement_.get(i));
        }
        if (error_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getError());
        }
        for (int i = 0; i < childEntry_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, childEntry_.get(i));
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org_glowroot_collector_spi.Trace.Entry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace.Entry)
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Entry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Entry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder.class);
        }

        // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.Entry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getDetailEntryFieldBuilder();
            getStackTraceElementFieldBuilder();
            getChildEntryFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          startOffsetNanos_ = 0L;

          durationNanos_ = 0L;

          active_ = false;

          message_ = "";

          if (detailEntryBuilder_ == null) {
            detailEntry_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            detailEntryBuilder_.clear();
          }
          if (stackTraceElementBuilder_ == null) {
            stackTraceElement_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            stackTraceElementBuilder_.clear();
          }
          if (errorBuilder_ == null) {
            error_ = null;
          } else {
            error_ = null;
            errorBuilder_ = null;
          }
          if (childEntryBuilder_ == null) {
            childEntry_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            childEntryBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_Entry_descriptor;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry getDefaultInstanceForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.getDefaultInstance();
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry build() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry buildPartial() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.startOffsetNanos_ = startOffsetNanos_;
          result.durationNanos_ = durationNanos_;
          result.active_ = active_;
          result.message_ = message_;
          if (detailEntryBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              detailEntry_ = java.util.Collections.unmodifiableList(detailEntry_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.detailEntry_ = detailEntry_;
          } else {
            result.detailEntry_ = detailEntryBuilder_.build();
          }
          if (stackTraceElementBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              stackTraceElement_ = java.util.Collections.unmodifiableList(stackTraceElement_);
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.stackTraceElement_ = stackTraceElement_;
          } else {
            result.stackTraceElement_ = stackTraceElementBuilder_.build();
          }
          if (errorBuilder_ == null) {
            result.error_ = error_;
          } else {
            result.error_ = errorBuilder_.build();
          }
          if (childEntryBuilder_ == null) {
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
              childEntry_ = java.util.Collections.unmodifiableList(childEntry_);
              bitField0_ = (bitField0_ & ~0x00000080);
            }
            result.childEntry_ = childEntry_;
          } else {
            result.childEntry_ = childEntryBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry) {
            return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry other) {
          if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.getDefaultInstance()) return this;
          if (other.getStartOffsetNanos() != 0L) {
            setStartOffsetNanos(other.getStartOffsetNanos());
          }
          if (other.getDurationNanos() != 0L) {
            setDurationNanos(other.getDurationNanos());
          }
          if (other.getActive() != false) {
            setActive(other.getActive());
          }
          if (!other.getMessage().isEmpty()) {
            message_ = other.message_;
            onChanged();
          }
          if (detailEntryBuilder_ == null) {
            if (!other.detailEntry_.isEmpty()) {
              if (detailEntry_.isEmpty()) {
                detailEntry_ = other.detailEntry_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureDetailEntryIsMutable();
                detailEntry_.addAll(other.detailEntry_);
              }
              onChanged();
            }
          } else {
            if (!other.detailEntry_.isEmpty()) {
              if (detailEntryBuilder_.isEmpty()) {
                detailEntryBuilder_.dispose();
                detailEntryBuilder_ = null;
                detailEntry_ = other.detailEntry_;
                bitField0_ = (bitField0_ & ~0x00000010);
                detailEntryBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getDetailEntryFieldBuilder() : null;
              } else {
                detailEntryBuilder_.addAllMessages(other.detailEntry_);
              }
            }
          }
          if (stackTraceElementBuilder_ == null) {
            if (!other.stackTraceElement_.isEmpty()) {
              if (stackTraceElement_.isEmpty()) {
                stackTraceElement_ = other.stackTraceElement_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureStackTraceElementIsMutable();
                stackTraceElement_.addAll(other.stackTraceElement_);
              }
              onChanged();
            }
          } else {
            if (!other.stackTraceElement_.isEmpty()) {
              if (stackTraceElementBuilder_.isEmpty()) {
                stackTraceElementBuilder_.dispose();
                stackTraceElementBuilder_ = null;
                stackTraceElement_ = other.stackTraceElement_;
                bitField0_ = (bitField0_ & ~0x00000020);
                stackTraceElementBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getStackTraceElementFieldBuilder() : null;
              } else {
                stackTraceElementBuilder_.addAllMessages(other.stackTraceElement_);
              }
            }
          }
          if (other.hasError()) {
            mergeError(other.getError());
          }
          if (childEntryBuilder_ == null) {
            if (!other.childEntry_.isEmpty()) {
              if (childEntry_.isEmpty()) {
                childEntry_ = other.childEntry_;
                bitField0_ = (bitField0_ & ~0x00000080);
              } else {
                ensureChildEntryIsMutable();
                childEntry_.addAll(other.childEntry_);
              }
              onChanged();
            }
          } else {
            if (!other.childEntry_.isEmpty()) {
              if (childEntryBuilder_.isEmpty()) {
                childEntryBuilder_.dispose();
                childEntryBuilder_ = null;
                childEntry_ = other.childEntry_;
                bitField0_ = (bitField0_ & ~0x00000080);
                childEntryBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getChildEntryFieldBuilder() : null;
              } else {
                childEntryBuilder_.addAllMessages(other.childEntry_);
              }
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long startOffsetNanos_ ;
        /**
         * <code>optional int64 start_offset_nanos = 1;</code>
         *
         * <pre>
         * start time relative to trace start
         * </pre>
         */
        public long getStartOffsetNanos() {
          return startOffsetNanos_;
        }
        /**
         * <code>optional int64 start_offset_nanos = 1;</code>
         *
         * <pre>
         * start time relative to trace start
         * </pre>
         */
        public Builder setStartOffsetNanos(long value) {
          
          startOffsetNanos_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 start_offset_nanos = 1;</code>
         *
         * <pre>
         * start time relative to trace start
         * </pre>
         */
        public Builder clearStartOffsetNanos() {
          
          startOffsetNanos_ = 0L;
          onChanged();
          return this;
        }

        private long durationNanos_ ;
        /**
         * <code>optional int64 duration_nanos = 2;</code>
         */
        public long getDurationNanos() {
          return durationNanos_;
        }
        /**
         * <code>optional int64 duration_nanos = 2;</code>
         */
        public Builder setDurationNanos(long value) {
          
          durationNanos_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 duration_nanos = 2;</code>
         */
        public Builder clearDurationNanos() {
          
          durationNanos_ = 0L;
          onChanged();
          return this;
        }

        private boolean active_ ;
        /**
         * <code>optional bool active = 3;</code>
         *
         * <pre>
         * whether entry was active at the time of a partial trace capture
         * </pre>
         */
        public boolean getActive() {
          return active_;
        }
        /**
         * <code>optional bool active = 3;</code>
         *
         * <pre>
         * whether entry was active at the time of a partial trace capture
         * </pre>
         */
        public Builder setActive(boolean value) {
          
          active_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool active = 3;</code>
         *
         * <pre>
         * whether entry was active at the time of a partial trace capture
         * </pre>
         */
        public Builder clearActive() {
          
          active_ = false;
          onChanged();
          return this;
        }

        private java.lang.Object message_ = "";
        /**
         * <code>optional string message = 4;</code>
         *
         * <pre>
         * message is empty for trace entries added using addErrorEntry()
         * </pre>
         */
        public java.lang.String getMessage() {
          java.lang.Object ref = message_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            message_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string message = 4;</code>
         *
         * <pre>
         * message is empty for trace entries added using addErrorEntry()
         * </pre>
         */
        public com.google.protobuf.ByteString
            getMessageBytes() {
          java.lang.Object ref = message_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            message_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string message = 4;</code>
         *
         * <pre>
         * message is empty for trace entries added using addErrorEntry()
         * </pre>
         */
        public Builder setMessage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          message_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 4;</code>
         *
         * <pre>
         * message is empty for trace entries added using addErrorEntry()
         * </pre>
         */
        public Builder clearMessage() {
          
          message_ = getDefaultInstance().getMessage();
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 4;</code>
         *
         * <pre>
         * message is empty for trace entries added using addErrorEntry()
         * </pre>
         */
        public Builder setMessageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          message_ = value;
          onChanged();
          return this;
        }

        private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> detailEntry_ =
          java.util.Collections.emptyList();
        private void ensureDetailEntryIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            detailEntry_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry>(detailEntry_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> detailEntryBuilder_;

        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> getDetailEntryList() {
          if (detailEntryBuilder_ == null) {
            return java.util.Collections.unmodifiableList(detailEntry_);
          } else {
            return detailEntryBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public int getDetailEntryCount() {
          if (detailEntryBuilder_ == null) {
            return detailEntry_.size();
          } else {
            return detailEntryBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry getDetailEntry(int index) {
          if (detailEntryBuilder_ == null) {
            return detailEntry_.get(index);
          } else {
            return detailEntryBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public Builder setDetailEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry value) {
          if (detailEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDetailEntryIsMutable();
            detailEntry_.set(index, value);
            onChanged();
          } else {
            detailEntryBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public Builder setDetailEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
          if (detailEntryBuilder_ == null) {
            ensureDetailEntryIsMutable();
            detailEntry_.set(index, builderForValue.build());
            onChanged();
          } else {
            detailEntryBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public Builder addDetailEntry(org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry value) {
          if (detailEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDetailEntryIsMutable();
            detailEntry_.add(value);
            onChanged();
          } else {
            detailEntryBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public Builder addDetailEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry value) {
          if (detailEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDetailEntryIsMutable();
            detailEntry_.add(index, value);
            onChanged();
          } else {
            detailEntryBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public Builder addDetailEntry(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
          if (detailEntryBuilder_ == null) {
            ensureDetailEntryIsMutable();
            detailEntry_.add(builderForValue.build());
            onChanged();
          } else {
            detailEntryBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public Builder addDetailEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
          if (detailEntryBuilder_ == null) {
            ensureDetailEntryIsMutable();
            detailEntry_.add(index, builderForValue.build());
            onChanged();
          } else {
            detailEntryBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public Builder addAllDetailEntry(
            java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry> values) {
          if (detailEntryBuilder_ == null) {
            ensureDetailEntryIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, detailEntry_);
            onChanged();
          } else {
            detailEntryBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public Builder clearDetailEntry() {
          if (detailEntryBuilder_ == null) {
            detailEntry_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            detailEntryBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public Builder removeDetailEntry(int index) {
          if (detailEntryBuilder_ == null) {
            ensureDetailEntryIsMutable();
            detailEntry_.remove(index);
            onChanged();
          } else {
            detailEntryBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder getDetailEntryBuilder(
            int index) {
          return getDetailEntryFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder getDetailEntryOrBuilder(
            int index) {
          if (detailEntryBuilder_ == null) {
            return detailEntry_.get(index);  } else {
            return detailEntryBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
             getDetailEntryOrBuilderList() {
          if (detailEntryBuilder_ != null) {
            return detailEntryBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(detailEntry_);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder addDetailEntryBuilder() {
          return getDetailEntryFieldBuilder().addBuilder(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder addDetailEntryBuilder(
            int index) {
          return getDetailEntryFieldBuilder().addBuilder(
              index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.DetailEntry detail_entry = 5;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder> 
             getDetailEntryBuilderList() {
          return getDetailEntryFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder> 
            getDetailEntryFieldBuilder() {
          if (detailEntryBuilder_ == null) {
            detailEntryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.DetailEntryOrBuilder>(
                    detailEntry_,
                    ((bitField0_ & 0x00000010) == 0x00000010),
                    getParentForChildren(),
                    isClean());
            detailEntry_ = null;
          }
          return detailEntryBuilder_;
        }

        private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> stackTraceElement_ =
          java.util.Collections.emptyList();
        private void ensureStackTraceElementIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            stackTraceElement_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement>(stackTraceElement_);
            bitField0_ |= 0x00000020;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder> stackTraceElementBuilder_;

        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> getStackTraceElementList() {
          if (stackTraceElementBuilder_ == null) {
            return java.util.Collections.unmodifiableList(stackTraceElement_);
          } else {
            return stackTraceElementBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public int getStackTraceElementCount() {
          if (stackTraceElementBuilder_ == null) {
            return stackTraceElement_.size();
          } else {
            return stackTraceElementBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement getStackTraceElement(int index) {
          if (stackTraceElementBuilder_ == null) {
            return stackTraceElement_.get(index);
          } else {
            return stackTraceElementBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public Builder setStackTraceElement(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement value) {
          if (stackTraceElementBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStackTraceElementIsMutable();
            stackTraceElement_.set(index, value);
            onChanged();
          } else {
            stackTraceElementBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public Builder setStackTraceElement(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder builderForValue) {
          if (stackTraceElementBuilder_ == null) {
            ensureStackTraceElementIsMutable();
            stackTraceElement_.set(index, builderForValue.build());
            onChanged();
          } else {
            stackTraceElementBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public Builder addStackTraceElement(org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement value) {
          if (stackTraceElementBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStackTraceElementIsMutable();
            stackTraceElement_.add(value);
            onChanged();
          } else {
            stackTraceElementBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public Builder addStackTraceElement(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement value) {
          if (stackTraceElementBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStackTraceElementIsMutable();
            stackTraceElement_.add(index, value);
            onChanged();
          } else {
            stackTraceElementBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public Builder addStackTraceElement(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder builderForValue) {
          if (stackTraceElementBuilder_ == null) {
            ensureStackTraceElementIsMutable();
            stackTraceElement_.add(builderForValue.build());
            onChanged();
          } else {
            stackTraceElementBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public Builder addStackTraceElement(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder builderForValue) {
          if (stackTraceElementBuilder_ == null) {
            ensureStackTraceElementIsMutable();
            stackTraceElement_.add(index, builderForValue.build());
            onChanged();
          } else {
            stackTraceElementBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public Builder addAllStackTraceElement(
            java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement> values) {
          if (stackTraceElementBuilder_ == null) {
            ensureStackTraceElementIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, stackTraceElement_);
            onChanged();
          } else {
            stackTraceElementBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public Builder clearStackTraceElement() {
          if (stackTraceElementBuilder_ == null) {
            stackTraceElement_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
          } else {
            stackTraceElementBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public Builder removeStackTraceElement(int index) {
          if (stackTraceElementBuilder_ == null) {
            ensureStackTraceElementIsMutable();
            stackTraceElement_.remove(index);
            onChanged();
          } else {
            stackTraceElementBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder getStackTraceElementBuilder(
            int index) {
          return getStackTraceElementFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder getStackTraceElementOrBuilder(
            int index) {
          if (stackTraceElementBuilder_ == null) {
            return stackTraceElement_.get(index);  } else {
            return stackTraceElementBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder> 
             getStackTraceElementOrBuilderList() {
          if (stackTraceElementBuilder_ != null) {
            return stackTraceElementBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(stackTraceElement_);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder addStackTraceElementBuilder() {
          return getStackTraceElementFieldBuilder().addBuilder(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder addStackTraceElementBuilder(
            int index) {
          return getStackTraceElementFieldBuilder().addBuilder(
              index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.StackTraceElement stack_trace_element = 6;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder> 
             getStackTraceElementBuilderList() {
          return getStackTraceElementFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder> 
            getStackTraceElementFieldBuilder() {
          if (stackTraceElementBuilder_ == null) {
            stackTraceElementBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder>(
                    stackTraceElement_,
                    ((bitField0_ & 0x00000020) == 0x00000020),
                    getParentForChildren(),
                    isClean());
            stackTraceElement_ = null;
          }
          return stackTraceElementBuilder_;
        }

        private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error error_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder> errorBuilder_;
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
         */
        public boolean hasError() {
          return errorBuilder_ != null || error_ != null;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error getError() {
          if (errorBuilder_ == null) {
            return error_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
          } else {
            return errorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
         */
        public Builder setError(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error value) {
          if (errorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            error_ = value;
            onChanged();
          } else {
            errorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
         */
        public Builder setError(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder builderForValue) {
          if (errorBuilder_ == null) {
            error_ = builderForValue.build();
            onChanged();
          } else {
            errorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
         */
        public Builder mergeError(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error value) {
          if (errorBuilder_ == null) {
            if (error_ != null) {
              error_ =
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.newBuilder(error_).mergeFrom(value).buildPartial();
            } else {
              error_ = value;
            }
            onChanged();
          } else {
            errorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
         */
        public Builder clearError() {
          if (errorBuilder_ == null) {
            error_ = null;
            onChanged();
          } else {
            error_ = null;
            errorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder getErrorBuilder() {
          
          onChanged();
          return getErrorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder getErrorOrBuilder() {
          if (errorBuilder_ != null) {
            return errorBuilder_.getMessageOrBuilder();
          } else {
            return error_ == null ?
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
          }
        }
        /**
         * <code>optional .org_glowroot_collector_spi.Trace.Error error = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder> 
            getErrorFieldBuilder() {
          if (errorBuilder_ == null) {
            errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.ErrorOrBuilder>(
                    getError(),
                    getParentForChildren(),
                    isClean());
            error_ = null;
          }
          return errorBuilder_;
        }

        private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> childEntry_ =
          java.util.Collections.emptyList();
        private void ensureChildEntryIsMutable() {
          if (!((bitField0_ & 0x00000080) == 0x00000080)) {
            childEntry_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry>(childEntry_);
            bitField0_ |= 0x00000080;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder> childEntryBuilder_;

        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> getChildEntryList() {
          if (childEntryBuilder_ == null) {
            return java.util.Collections.unmodifiableList(childEntry_);
          } else {
            return childEntryBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public int getChildEntryCount() {
          if (childEntryBuilder_ == null) {
            return childEntry_.size();
          } else {
            return childEntryBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry getChildEntry(int index) {
          if (childEntryBuilder_ == null) {
            return childEntry_.get(index);
          } else {
            return childEntryBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public Builder setChildEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry value) {
          if (childEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildEntryIsMutable();
            childEntry_.set(index, value);
            onChanged();
          } else {
            childEntryBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public Builder setChildEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder builderForValue) {
          if (childEntryBuilder_ == null) {
            ensureChildEntryIsMutable();
            childEntry_.set(index, builderForValue.build());
            onChanged();
          } else {
            childEntryBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public Builder addChildEntry(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry value) {
          if (childEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildEntryIsMutable();
            childEntry_.add(value);
            onChanged();
          } else {
            childEntryBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public Builder addChildEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry value) {
          if (childEntryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildEntryIsMutable();
            childEntry_.add(index, value);
            onChanged();
          } else {
            childEntryBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public Builder addChildEntry(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder builderForValue) {
          if (childEntryBuilder_ == null) {
            ensureChildEntryIsMutable();
            childEntry_.add(builderForValue.build());
            onChanged();
          } else {
            childEntryBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public Builder addChildEntry(
            int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder builderForValue) {
          if (childEntryBuilder_ == null) {
            ensureChildEntryIsMutable();
            childEntry_.add(index, builderForValue.build());
            onChanged();
          } else {
            childEntryBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public Builder addAllChildEntry(
            java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> values) {
          if (childEntryBuilder_ == null) {
            ensureChildEntryIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, childEntry_);
            onChanged();
          } else {
            childEntryBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public Builder clearChildEntry() {
          if (childEntryBuilder_ == null) {
            childEntry_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000080);
            onChanged();
          } else {
            childEntryBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public Builder removeChildEntry(int index) {
          if (childEntryBuilder_ == null) {
            ensureChildEntryIsMutable();
            childEntry_.remove(index);
            onChanged();
          } else {
            childEntryBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder getChildEntryBuilder(
            int index) {
          return getChildEntryFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder getChildEntryOrBuilder(
            int index) {
          if (childEntryBuilder_ == null) {
            return childEntry_.get(index);  } else {
            return childEntryBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder> 
             getChildEntryOrBuilderList() {
          if (childEntryBuilder_ != null) {
            return childEntryBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(childEntry_);
          }
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder addChildEntryBuilder() {
          return getChildEntryFieldBuilder().addBuilder(
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder addChildEntryBuilder(
            int index) {
          return getChildEntryFieldBuilder().addBuilder(
              index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.getDefaultInstance());
        }
        /**
         * <code>repeated .org_glowroot_collector_spi.Trace.Entry child_entry = 8;</code>
         */
        public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder> 
             getChildEntryBuilderList() {
          return getChildEntryFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder> 
            getChildEntryFieldBuilder() {
          if (childEntryBuilder_ == null) {
            childEntryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder>(
                    childEntry_,
                    ((bitField0_ & 0x00000080) == 0x00000080),
                    getParentForChildren(),
                    isClean());
            childEntry_ = null;
          }
          return childEntryBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace.Entry)
      }

      // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace.Entry)
      private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry();
      }

      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Entry>
          PARSER = new com.google.protobuf.AbstractParser<Entry>() {
        public Entry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Entry(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Entry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Entry> getParserForType() {
        return PARSER;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface StackTraceElementOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org_glowroot_collector_spi.Trace.StackTraceElement)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string class_name = 1;</code>
       */
      java.lang.String getClassName();
      /**
       * <code>optional string class_name = 1;</code>
       */
      com.google.protobuf.ByteString
          getClassNameBytes();

      /**
       * <code>optional string method_name = 2;</code>
       */
      java.lang.String getMethodName();
      /**
       * <code>optional string method_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getMethodNameBytes();

      /**
       * <code>optional string file_name = 3;</code>
       */
      java.lang.String getFileName();
      /**
       * <code>optional string file_name = 3;</code>
       */
      com.google.protobuf.ByteString
          getFileNameBytes();

      /**
       * <code>optional sint32 line_number = 4;</code>
       *
       * <pre>
       * sint since can be negative
       * </pre>
       */
      int getLineNumber();
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace.StackTraceElement}
     */
    public  static final class StackTraceElement extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org_glowroot_collector_spi.Trace.StackTraceElement)
        StackTraceElementOrBuilder {
      // Use StackTraceElement.newBuilder() to construct.
      private StackTraceElement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private StackTraceElement() {
        className_ = "";
        methodName_ = "";
        fileName_ = "";
        lineNumber_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private StackTraceElement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                className_ = s;
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();

                methodName_ = s;
                break;
              }
              case 26: {
                String s = input.readStringRequireUtf8();

                fileName_ = s;
                break;
              }
              case 32: {

                lineNumber_ = input.readSInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_StackTraceElement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_StackTraceElement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder.class);
      }

      public static final int CLASS_NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object className_;
      /**
       * <code>optional string class_name = 1;</code>
       */
      public java.lang.String getClassName() {
        java.lang.Object ref = className_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          className_ = s;
          return s;
        }
      }
      /**
       * <code>optional string class_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClassNameBytes() {
        java.lang.Object ref = className_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          className_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int METHOD_NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object methodName_;
      /**
       * <code>optional string method_name = 2;</code>
       */
      public java.lang.String getMethodName() {
        java.lang.Object ref = methodName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          methodName_ = s;
          return s;
        }
      }
      /**
       * <code>optional string method_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMethodNameBytes() {
        java.lang.Object ref = methodName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          methodName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FILE_NAME_FIELD_NUMBER = 3;
      private volatile java.lang.Object fileName_;
      /**
       * <code>optional string file_name = 3;</code>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        }
      }
      /**
       * <code>optional string file_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LINE_NUMBER_FIELD_NUMBER = 4;
      private int lineNumber_;
      /**
       * <code>optional sint32 line_number = 4;</code>
       *
       * <pre>
       * sint since can be negative
       * </pre>
       */
      public int getLineNumber() {
        return lineNumber_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getClassNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, className_);
        }
        if (!getMethodNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, methodName_);
        }
        if (!getFileNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 3, fileName_);
        }
        if (lineNumber_ != 0) {
          output.writeSInt32(4, lineNumber_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getClassNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, className_);
        }
        if (!getMethodNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, methodName_);
        }
        if (!getFileNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(3, fileName_);
        }
        if (lineNumber_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(4, lineNumber_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org_glowroot_collector_spi.Trace.StackTraceElement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace.StackTraceElement)
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_StackTraceElement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_StackTraceElement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.Builder.class);
        }

        // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.StackTraceElement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          className_ = "";

          methodName_ = "";

          fileName_ = "";

          lineNumber_ = 0;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_StackTraceElement_descriptor;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement getDefaultInstanceForType() {
          return org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.getDefaultInstance();
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement build() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement buildPartial() {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement(this);
          result.className_ = className_;
          result.methodName_ = methodName_;
          result.fileName_ = fileName_;
          result.lineNumber_ = lineNumber_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement) {
            return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement other) {
          if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement.getDefaultInstance()) return this;
          if (!other.getClassName().isEmpty()) {
            className_ = other.className_;
            onChanged();
          }
          if (!other.getMethodName().isEmpty()) {
            methodName_ = other.methodName_;
            onChanged();
          }
          if (!other.getFileName().isEmpty()) {
            fileName_ = other.fileName_;
            onChanged();
          }
          if (other.getLineNumber() != 0) {
            setLineNumber(other.getLineNumber());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object className_ = "";
        /**
         * <code>optional string class_name = 1;</code>
         */
        public java.lang.String getClassName() {
          java.lang.Object ref = className_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            className_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string class_name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getClassNameBytes() {
          java.lang.Object ref = className_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            className_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string class_name = 1;</code>
         */
        public Builder setClassName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          className_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string class_name = 1;</code>
         */
        public Builder clearClassName() {
          
          className_ = getDefaultInstance().getClassName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string class_name = 1;</code>
         */
        public Builder setClassNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          className_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object methodName_ = "";
        /**
         * <code>optional string method_name = 2;</code>
         */
        public java.lang.String getMethodName() {
          java.lang.Object ref = methodName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            methodName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string method_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getMethodNameBytes() {
          java.lang.Object ref = methodName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            methodName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string method_name = 2;</code>
         */
        public Builder setMethodName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          methodName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string method_name = 2;</code>
         */
        public Builder clearMethodName() {
          
          methodName_ = getDefaultInstance().getMethodName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string method_name = 2;</code>
         */
        public Builder setMethodNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          methodName_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object fileName_ = "";
        /**
         * <code>optional string file_name = 3;</code>
         */
        public java.lang.String getFileName() {
          java.lang.Object ref = fileName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            fileName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string file_name = 3;</code>
         */
        public com.google.protobuf.ByteString
            getFileNameBytes() {
          java.lang.Object ref = fileName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fileName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string file_name = 3;</code>
         */
        public Builder setFileName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          fileName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string file_name = 3;</code>
         */
        public Builder clearFileName() {
          
          fileName_ = getDefaultInstance().getFileName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string file_name = 3;</code>
         */
        public Builder setFileNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          fileName_ = value;
          onChanged();
          return this;
        }

        private int lineNumber_ ;
        /**
         * <code>optional sint32 line_number = 4;</code>
         *
         * <pre>
         * sint since can be negative
         * </pre>
         */
        public int getLineNumber() {
          return lineNumber_;
        }
        /**
         * <code>optional sint32 line_number = 4;</code>
         *
         * <pre>
         * sint since can be negative
         * </pre>
         */
        public Builder setLineNumber(int value) {
          
          lineNumber_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint32 line_number = 4;</code>
         *
         * <pre>
         * sint since can be negative
         * </pre>
         */
        public Builder clearLineNumber() {
          
          lineNumber_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace.StackTraceElement)
      }

      // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace.StackTraceElement)
      private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement();
      }

      public static org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<StackTraceElement>
          PARSER = new com.google.protobuf.AbstractParser<StackTraceElement>() {
        public StackTraceElement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new StackTraceElement(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<StackTraceElement> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StackTraceElement> getParserForType() {
        return PARSER;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.StackTraceElement getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header header_;
    /**
     * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
     */
    public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header getHeader() {
      return header_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
     */
    public org.glowroot.collector.spi.model.TraceOuterClass.Trace.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int ENTRY_FIELD_NUMBER = 2;
    private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> entry_;
    /**
     * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
     *
     * <pre>
     * each entry can have child entries (and each child entry can have child entries, etc)
     * </pre>
     */
    public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> getEntryList() {
      return entry_;
    }
    /**
     * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
     *
     * <pre>
     * each entry can have child entries (and each child entry can have child entries, etc)
     * </pre>
     */
    public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder> 
        getEntryOrBuilderList() {
      return entry_;
    }
    /**
     * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
     *
     * <pre>
     * each entry can have child entries (and each child entry can have child entries, etc)
     * </pre>
     */
    public int getEntryCount() {
      return entry_.size();
    }
    /**
     * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
     *
     * <pre>
     * each entry can have child entries (and each child entry can have child entries, etc)
     * </pre>
     */
    public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry getEntry(int index) {
      return entry_.get(index);
    }
    /**
     * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
     *
     * <pre>
     * each entry can have child entries (and each child entry can have child entries, etc)
     * </pre>
     */
    public org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder getEntryOrBuilder(
        int index) {
      return entry_.get(index);
    }

    public static final int PROFILE_TREE_FIELD_NUMBER = 3;
    private org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree profileTree_;
    /**
     * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
     */
    public boolean hasProfileTree() {
      return profileTree_ != null;
    }
    /**
     * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
     */
    public org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree getProfileTree() {
      return profileTree_ == null ? org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.getDefaultInstance() : profileTree_;
    }
    /**
     * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
     */
    public org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTreeOrBuilder getProfileTreeOrBuilder() {
      return getProfileTree();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      for (int i = 0; i < entry_.size(); i++) {
        output.writeMessage(2, entry_.get(i));
      }
      if (profileTree_ != null) {
        output.writeMessage(3, getProfileTree());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      for (int i = 0; i < entry_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, entry_.get(i));
      }
      if (profileTree_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getProfileTree());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.glowroot.collector.spi.model.TraceOuterClass.Trace prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org_glowroot_collector_spi.Trace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org_glowroot_collector_spi.Trace)
        org.glowroot.collector.spi.model.TraceOuterClass.TraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.collector.spi.model.TraceOuterClass.Trace.class, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Builder.class);
      }

      // Construct using org.glowroot.collector.proto.TraceOuterClass.Trace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEntryFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (entryBuilder_ == null) {
          entry_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          entryBuilder_.clear();
        }
        if (profileTreeBuilder_ == null) {
          profileTree_ = null;
        } else {
          profileTree_ = null;
          profileTreeBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.glowroot.collector.spi.model.TraceOuterClass.internal_static_org_glowroot_collector_spi_Trace_descriptor;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace getDefaultInstanceForType() {
        return org.glowroot.collector.spi.model.TraceOuterClass.Trace.getDefaultInstance();
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace build() {
        org.glowroot.collector.spi.model.TraceOuterClass.Trace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.glowroot.collector.spi.model.TraceOuterClass.Trace buildPartial() {
        org.glowroot.collector.spi.model.TraceOuterClass.Trace result = new org.glowroot.collector.spi.model.TraceOuterClass.Trace(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (entryBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            entry_ = java.util.Collections.unmodifiableList(entry_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.entry_ = entry_;
        } else {
          result.entry_ = entryBuilder_.build();
        }
        if (profileTreeBuilder_ == null) {
          result.profileTree_ = profileTree_;
        } else {
          result.profileTree_ = profileTreeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.glowroot.collector.spi.model.TraceOuterClass.Trace) {
          return mergeFrom((org.glowroot.collector.spi.model.TraceOuterClass.Trace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.glowroot.collector.spi.model.TraceOuterClass.Trace other) {
        if (other == org.glowroot.collector.spi.model.TraceOuterClass.Trace.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (entryBuilder_ == null) {
          if (!other.entry_.isEmpty()) {
            if (entry_.isEmpty()) {
              entry_ = other.entry_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEntryIsMutable();
              entry_.addAll(other.entry_);
            }
            onChanged();
          }
        } else {
          if (!other.entry_.isEmpty()) {
            if (entryBuilder_.isEmpty()) {
              entryBuilder_.dispose();
              entryBuilder_ = null;
              entry_ = other.entry_;
              bitField0_ = (bitField0_ & ~0x00000002);
              entryBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEntryFieldBuilder() : null;
            } else {
              entryBuilder_.addAllMessages(other.entry_);
            }
          }
        }
        if (other.hasProfileTree()) {
          mergeProfileTree(other.getProfileTree());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.glowroot.collector.spi.model.TraceOuterClass.Trace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.glowroot.collector.spi.model.TraceOuterClass.Trace) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
       */
      public Builder setHeader(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
       */
      public Builder setHeader(
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
       */
      public Builder mergeHeader(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>optional .org_glowroot_collector_spi.Trace.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Header.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> entry_ =
        java.util.Collections.emptyList();
      private void ensureEntryIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          entry_ = new java.util.ArrayList<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry>(entry_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder> entryBuilder_;

      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> getEntryList() {
        if (entryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entry_);
        } else {
          return entryBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public int getEntryCount() {
        if (entryBuilder_ == null) {
          return entry_.size();
        } else {
          return entryBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry getEntry(int index) {
        if (entryBuilder_ == null) {
          return entry_.get(index);
        } else {
          return entryBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public Builder setEntry(
          int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry value) {
        if (entryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntryIsMutable();
          entry_.set(index, value);
          onChanged();
        } else {
          entryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public Builder setEntry(
          int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder builderForValue) {
        if (entryBuilder_ == null) {
          ensureEntryIsMutable();
          entry_.set(index, builderForValue.build());
          onChanged();
        } else {
          entryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public Builder addEntry(org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry value) {
        if (entryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntryIsMutable();
          entry_.add(value);
          onChanged();
        } else {
          entryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public Builder addEntry(
          int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry value) {
        if (entryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntryIsMutable();
          entry_.add(index, value);
          onChanged();
        } else {
          entryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public Builder addEntry(
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder builderForValue) {
        if (entryBuilder_ == null) {
          ensureEntryIsMutable();
          entry_.add(builderForValue.build());
          onChanged();
        } else {
          entryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public Builder addEntry(
          int index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder builderForValue) {
        if (entryBuilder_ == null) {
          ensureEntryIsMutable();
          entry_.add(index, builderForValue.build());
          onChanged();
        } else {
          entryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public Builder addAllEntry(
          java.lang.Iterable<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry> values) {
        if (entryBuilder_ == null) {
          ensureEntryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, entry_);
          onChanged();
        } else {
          entryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public Builder clearEntry() {
        if (entryBuilder_ == null) {
          entry_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          entryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public Builder removeEntry(int index) {
        if (entryBuilder_ == null) {
          ensureEntryIsMutable();
          entry_.remove(index);
          onChanged();
        } else {
          entryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder getEntryBuilder(
          int index) {
        return getEntryFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder getEntryOrBuilder(
          int index) {
        if (entryBuilder_ == null) {
          return entry_.get(index);  } else {
          return entryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public java.util.List<? extends org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder> 
           getEntryOrBuilderList() {
        if (entryBuilder_ != null) {
          return entryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entry_);
        }
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder addEntryBuilder() {
        return getEntryFieldBuilder().addBuilder(
            org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder addEntryBuilder(
          int index) {
        return getEntryFieldBuilder().addBuilder(
            index, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .org_glowroot_collector_spi.Trace.Entry entry = 2;</code>
       *
       * <pre>
       * each entry can have child entries (and each child entry can have child entries, etc)
       * </pre>
       */
      public java.util.List<org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder> 
           getEntryBuilderList() {
        return getEntryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder> 
          getEntryFieldBuilder() {
        if (entryBuilder_ == null) {
          entryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry, org.glowroot.collector.spi.model.TraceOuterClass.Trace.Entry.Builder, org.glowroot.collector.spi.model.TraceOuterClass.Trace.EntryOrBuilder>(
                  entry_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          entry_ = null;
        }
        return entryBuilder_;
      }

      private org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree profileTree_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree, org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.Builder, org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTreeOrBuilder> profileTreeBuilder_;
      /**
       * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
       */
      public boolean hasProfileTree() {
        return profileTreeBuilder_ != null || profileTree_ != null;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
       */
      public org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree getProfileTree() {
        if (profileTreeBuilder_ == null) {
          return profileTree_ == null ? org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.getDefaultInstance() : profileTree_;
        } else {
          return profileTreeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
       */
      public Builder setProfileTree(org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree value) {
        if (profileTreeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          profileTree_ = value;
          onChanged();
        } else {
          profileTreeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
       */
      public Builder setProfileTree(
          org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.Builder builderForValue) {
        if (profileTreeBuilder_ == null) {
          profileTree_ = builderForValue.build();
          onChanged();
        } else {
          profileTreeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
       */
      public Builder mergeProfileTree(org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree value) {
        if (profileTreeBuilder_ == null) {
          if (profileTree_ != null) {
            profileTree_ =
              org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.newBuilder(profileTree_).mergeFrom(value).buildPartial();
          } else {
            profileTree_ = value;
          }
          onChanged();
        } else {
          profileTreeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
       */
      public Builder clearProfileTree() {
        if (profileTreeBuilder_ == null) {
          profileTree_ = null;
          onChanged();
        } else {
          profileTree_ = null;
          profileTreeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
       */
      public org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.Builder getProfileTreeBuilder() {
        
        onChanged();
        return getProfileTreeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
       */
      public org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTreeOrBuilder getProfileTreeOrBuilder() {
        if (profileTreeBuilder_ != null) {
          return profileTreeBuilder_.getMessageOrBuilder();
        } else {
          return profileTree_ == null ?
              org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.getDefaultInstance() : profileTree_;
        }
      }
      /**
       * <code>optional .org_glowroot_collector_spi.ProfileTree profile_tree = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree, org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.Builder, org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTreeOrBuilder> 
          getProfileTreeFieldBuilder() {
        if (profileTreeBuilder_ == null) {
          profileTreeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree, org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTree.Builder, org.glowroot.collector.spi.model.ProfileTreeOuterClass.ProfileTreeOrBuilder>(
                  getProfileTree(),
                  getParentForChildren(),
                  isClean());
          profileTree_ = null;
        }
        return profileTreeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org_glowroot_collector_spi.Trace)
    }

    // @@protoc_insertion_point(class_scope:org_glowroot_collector_spi.Trace)
    private static final org.glowroot.collector.spi.model.TraceOuterClass.Trace DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.glowroot.collector.spi.model.TraceOuterClass.Trace();
    }

    public static org.glowroot.collector.spi.model.TraceOuterClass.Trace getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Trace>
        PARSER = new com.google.protobuf.AbstractParser<Trace>() {
      public Trace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Trace(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Trace> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Trace> getParserForType() {
      return PARSER;
    }

    public org.glowroot.collector.spi.model.TraceOuterClass.Trace getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_Header_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_Header_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_Attribute_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_Attribute_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_DetailEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_DetailEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_DetailValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_DetailValue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_Error_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_Error_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_Throwable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_Throwable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_Timer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_Timer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_GarbageCollectionActivity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_GarbageCollectionActivity_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_Entry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_Entry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_collector_spi_Trace_StackTraceElement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_collector_spi_Trace_StackTraceElement_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Trace.proto\022\032org_glowroot_collector_sp" +
      "i\032\021ProfileTree.proto\"\305\021\n\005Trace\0228\n\006header" +
      "\030\001 \001(\0132(.org_glowroot_collector_spi.Trac" +
      "e.Header\0226\n\005entry\030\002 \003(\0132\'.org_glowroot_c" +
      "ollector_spi.Trace.Entry\022=\n\014profile_tree" +
      "\030\003 \001(\0132\'.org_glowroot_collector_spi.Prof" +
      "ileTree\032\202\006\n\006Header\022\n\n\002id\030\001 \001(\t\022\017\n\007partia" +
      "l\030\002 \001(\010\022\014\n\004slow\030\003 \001(\010\022\022\n\nstart_time\030\004 \001(" +
      "\003\022\024\n\014capture_time\030\005 \001(\003\022\026\n\016duration_nano" +
      "s\030\006 \001(\003\022\030\n\020transaction_type\030\007 \001(\t\022\030\n\020tra",
      "nsaction_name\030\010 \001(\t\022\020\n\010headline\030\t \001(\t\022\014\n" +
      "\004user\030\n \001(\t\022>\n\tattribute\030\013 \003(\0132+.org_glo" +
      "wroot_collector_spi.Trace.Attribute\022C\n\014d" +
      "etail_entry\030\014 \003(\0132-.org_glowroot_collect" +
      "or_spi.Trace.DetailEntry\0226\n\005error\030\r \001(\0132" +
      "\'.org_glowroot_collector_spi.Trace.Error" +
      "\022;\n\nroot_timer\030\016 \001(\0132\'.org_glowroot_coll" +
      "ector_spi.Trace.Timer\022\030\n\020thread_cpu_nano" +
      "s\030\017 \001(\022\022\034\n\024thread_blocked_nanos\030\020 \001(\022\022\033\n" +
      "\023thread_waited_nanos\030\021 \001(\022\022\036\n\026thread_all",
      "ocated_bytes\030\022 \001(\022\022P\n\013gc_activity\030\023 \003(\0132" +
      ";.org_glowroot_collector_spi.Trace.Garba" +
      "geCollectionActivity\022\023\n\013entry_count\030\024 \001(" +
      "\005\022\034\n\024entry_limit_exceeded\030\025 \001(\010\022\034\n\024profi" +
      "le_sample_count\030\026 \001(\003\022%\n\035profile_sample_" +
      "limit_exceeded\030\027 \001(\010\032(\n\tAttribute\022\014\n\004nam" +
      "e\030\001 \001(\t\022\r\n\005value\030\002 \003(\t\032\235\001\n\013DetailEntry\022\014" +
      "\n\004name\030\001 \001(\t\022<\n\005value\030\002 \003(\0132-.org_glowro" +
      "ot_collector_spi.Trace.DetailValue\022B\n\013ch" +
      "ild_entry\030\003 \003(\0132-.org_glowroot_collector",
      "_spi.Trace.DetailEntry\032T\n\013DetailValue\022\016\n" +
      "\004sval\030\001 \001(\tH\000\022\016\n\004dval\030\002 \001(\001H\000\022\016\n\004lval\030\003 " +
      "\001(\003H\000\022\016\n\004bval\030\004 \001(\010H\000B\005\n\003val\032X\n\005Error\022\017\n" +
      "\007message\030\001 \001(\t\022>\n\texception\030\002 \001(\0132+.org_" +
      "glowroot_collector_spi.Trace.Throwable\032\303" +
      "\001\n\tThrowable\022\017\n\007display\030\001 \001(\t\022D\n\007element" +
      "\030\002 \003(\01323.org_glowroot_collector_spi.Trac" +
      "e.StackTraceElement\022#\n\033frames_in_common_" +
      "with_cause\030\003 \001(\005\022:\n\005cause\030\004 \001(\0132+.org_gl" +
      "owroot_collector_spi.Trace.Throwable\032\231\001\n",
      "\005Timer\022\014\n\004name\030\001 \001(\t\022\020\n\010extended\030\002 \001(\010\022\023" +
      "\n\013total_nanos\030\003 \001(\003\022\r\n\005count\030\004 \001(\003\022\016\n\006ac" +
      "tive\030\005 \001(\010\022<\n\013child_timer\030\006 \003(\0132\'.org_gl" +
      "owroot_collector_spi.Trace.Timer\032X\n\031Garb" +
      "ageCollectionActivity\022\026\n\016collector_name\030" +
      "\001 \001(\t\022\024\n\014total_millis\030\002 \001(\003\022\r\n\005count\030\003 \001" +
      "(\003\032\351\002\n\005Entry\022\032\n\022start_offset_nanos\030\001 \001(\003" +
      "\022\026\n\016duration_nanos\030\002 \001(\003\022\016\n\006active\030\003 \001(\010" +
      "\022\017\n\007message\030\004 \001(\t\022C\n\014detail_entry\030\005 \003(\0132" +
      "-.org_glowroot_collector_spi.Trace.Detai",
      "lEntry\022P\n\023stack_trace_element\030\006 \003(\01323.or" +
      "g_glowroot_collector_spi.Trace.StackTrac" +
      "eElement\0226\n\005error\030\007 \001(\0132\'.org_glowroot_c" +
      "ollector_spi.Trace.Error\022<\n\013child_entry\030" +
      "\010 \003(\0132\'.org_glowroot_collector_spi.Trace" +
      ".Entry\032d\n\021StackTraceElement\022\022\n\nclass_nam" +
      "e\030\001 \001(\t\022\023\n\013method_name\030\002 \001(\t\022\021\n\tfile_nam" +
      "e\030\003 \001(\t\022\023\n\013line_number\030\004 \001(\021B\036\n\034org.glow" +
      "root.collector.protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.glowroot.collector.spi.model.ProfileTreeOuterClass.getDescriptor(),
        }, assigner);
    internal_static_org_glowroot_collector_spi_Trace_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_glowroot_collector_spi_Trace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_descriptor,
        new java.lang.String[] { "Header", "Entry", "ProfileTree", });
    internal_static_org_glowroot_collector_spi_Trace_Header_descriptor =
      internal_static_org_glowroot_collector_spi_Trace_descriptor.getNestedTypes().get(0);
    internal_static_org_glowroot_collector_spi_Trace_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_Header_descriptor,
        new java.lang.String[] { "Id", "Partial", "Slow", "StartTime", "CaptureTime", "DurationNanos", "TransactionType", "TransactionName", "Headline", "User", "Attribute", "DetailEntry", "Error", "RootTimer", "ThreadCpuNanos", "ThreadBlockedNanos", "ThreadWaitedNanos", "ThreadAllocatedBytes", "GcActivity", "EntryCount", "EntryLimitExceeded", "ProfileSampleCount", "ProfileSampleLimitExceeded", });
    internal_static_org_glowroot_collector_spi_Trace_Attribute_descriptor =
      internal_static_org_glowroot_collector_spi_Trace_descriptor.getNestedTypes().get(1);
    internal_static_org_glowroot_collector_spi_Trace_Attribute_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_Attribute_descriptor,
        new java.lang.String[] { "Name", "Value", });
    internal_static_org_glowroot_collector_spi_Trace_DetailEntry_descriptor =
      internal_static_org_glowroot_collector_spi_Trace_descriptor.getNestedTypes().get(2);
    internal_static_org_glowroot_collector_spi_Trace_DetailEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_DetailEntry_descriptor,
        new java.lang.String[] { "Name", "Value", "ChildEntry", });
    internal_static_org_glowroot_collector_spi_Trace_DetailValue_descriptor =
      internal_static_org_glowroot_collector_spi_Trace_descriptor.getNestedTypes().get(3);
    internal_static_org_glowroot_collector_spi_Trace_DetailValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_DetailValue_descriptor,
        new java.lang.String[] { "Sval", "Dval", "Lval", "Bval", "Val", });
    internal_static_org_glowroot_collector_spi_Trace_Error_descriptor =
      internal_static_org_glowroot_collector_spi_Trace_descriptor.getNestedTypes().get(4);
    internal_static_org_glowroot_collector_spi_Trace_Error_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_Error_descriptor,
        new java.lang.String[] { "Message", "Exception", });
    internal_static_org_glowroot_collector_spi_Trace_Throwable_descriptor =
      internal_static_org_glowroot_collector_spi_Trace_descriptor.getNestedTypes().get(5);
    internal_static_org_glowroot_collector_spi_Trace_Throwable_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_Throwable_descriptor,
        new java.lang.String[] { "Display", "Element", "FramesInCommonWithCause", "Cause", });
    internal_static_org_glowroot_collector_spi_Trace_Timer_descriptor =
      internal_static_org_glowroot_collector_spi_Trace_descriptor.getNestedTypes().get(6);
    internal_static_org_glowroot_collector_spi_Trace_Timer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_Timer_descriptor,
        new java.lang.String[] { "Name", "Extended", "TotalNanos", "Count", "Active", "ChildTimer", });
    internal_static_org_glowroot_collector_spi_Trace_GarbageCollectionActivity_descriptor =
      internal_static_org_glowroot_collector_spi_Trace_descriptor.getNestedTypes().get(7);
    internal_static_org_glowroot_collector_spi_Trace_GarbageCollectionActivity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_GarbageCollectionActivity_descriptor,
        new java.lang.String[] { "CollectorName", "TotalMillis", "Count", });
    internal_static_org_glowroot_collector_spi_Trace_Entry_descriptor =
      internal_static_org_glowroot_collector_spi_Trace_descriptor.getNestedTypes().get(8);
    internal_static_org_glowroot_collector_spi_Trace_Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_Entry_descriptor,
        new java.lang.String[] { "StartOffsetNanos", "DurationNanos", "Active", "Message", "DetailEntry", "StackTraceElement", "Error", "ChildEntry", });
    internal_static_org_glowroot_collector_spi_Trace_StackTraceElement_descriptor =
      internal_static_org_glowroot_collector_spi_Trace_descriptor.getNestedTypes().get(9);
    internal_static_org_glowroot_collector_spi_Trace_StackTraceElement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_collector_spi_Trace_StackTraceElement_descriptor,
        new java.lang.String[] { "ClassName", "MethodName", "FileName", "LineNumber", });
    org.glowroot.collector.spi.model.ProfileTreeOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
