<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.glowroot</groupId>
    <artifactId>glowroot-parent</artifactId>
    <version>0.8.5-SNAPSHOT</version>
  </parent>

  <artifactId>glowroot-test-harness</artifactId>

  <name>Glowroot Test Harness</name>
  <description>Glowroot Test Harness</description>

  <dependencies>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- do not include glowroot-api, glowroot-plugin-api or glowroot-collector-spi since want to
      either get them transitively from glowroot-core (during mvn test) or get them from shaded
      glowroot-core (during mvn package) -->
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <!-- immutables is only needed at compile time -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.ning</groupId>
      <artifactId>async-http-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-guava</artifactId>
      <version>2.6.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <!-- logback is used by SpyingLobackFilter -->
      <!-- TODO make it optional so test-harness users can choose their own slf4j implementation -->
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
    </dependency>
    <dependency>
      <!-- logback is used by SpyingLobackFilter -->
      <!-- TODO make it optional so test-harness users can choose their own slf4j implementation -->
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <!-- using org.junit.runner.notification.RunListener -->
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>${checker.qual.group.id}</groupId>
      <artifactId>${checker.qual.artifact.id}</artifactId>
      <version>${checker.qual.version}</version>
      <!-- don't need this dependency at runtime since only annotations -->
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <!-- don't need this dependency at runtime since only annotations,
        however setting <optional>true</optional> causes this error in eclipse workspace
        "The type javax.annotation.Nullable cannot be resolved. It is indirectly referenced
        from required .class files".
        This error occurs inside glowroot plugin test code when the glowroot-test-harness
        project is open at same time as plugin -->
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- shading of core inside test-harness is primarily done so core doesn't need to be
          deployed to maven central for plugin authors to use test-harness, this hopefully makes
          it more clear that only test code should depend on core (through test-harness),
          while plugin code should only depend on plugin-api -->
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <dependencyReducedPomLocation>
            ${project.build.directory}/dependency-reduced-pom.xml
          </dependencyReducedPomLocation>
          <createSourcesJar>true</createSourcesJar>
          <artifactSet>
            <includes>
              <include>org.glowroot:glowroot-core</include>
            </includes>
          </artifactSet>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <excludePackageNames>org.glowroot.container.impl</excludePackageNames>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <manifestEntries>
                <Build-Time>${maven.build.timestamp}</Build-Time>
                <Main-Class>org.glowroot.Viewer</Main-Class>
                <Premain-Class>org.glowroot.Agent</Premain-Class>
                <Can-Redefine-Classes>true</Can-Redefine-Classes>
                <Can-Retransform-Classes>true</Can-Retransform-Classes>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
